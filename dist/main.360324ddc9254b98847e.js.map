{"version":3,"file":"main.360324ddc9254b98847e.js","mappings":"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","sources":["webpack://mark2/webpack/runtime/chunk loaded","webpack://mark2/./src/i18n/locales/pt.js","webpack://mark2/./src/i18n/locales/en.js","webpack://mark2/./src/i18n/locales/es.js","webpack://mark2/./src/i18n/LanguageManager.js","webpack://mark2/./src/theme/ThemeManager.js","webpack://mark2/./src/utils/markdownParser.js","webpack://mark2/./src/utils/mindMapGenerator.js","webpack://mark2/./src/utils/ExampleLoader.js","webpack://mark2/./src/utils/mindMapRenderer.js","webpack://mark2/./src/utils/ExportUtils.js","webpack://mark2/./src/atoms/Button/index.js","webpack://mark2/./src/atoms/LanguageSelector/index.js","webpack://mark2/./src/molecules/Toolbar/index.js","webpack://mark2/./src/organisms/Header/index.js","webpack://mark2/./src/atoms/TextInput/index.js","webpack://mark2/./src/molecules/TextEditor/index.js","webpack://mark2/./src/organisms/EditorPanel/index.js","webpack://mark2/./src/index.js","webpack://mark2/webpack/bootstrap","webpack://mark2/webpack/runtime/hasOwnProperty shorthand","webpack://mark2/webpack/runtime/jsonp chunk loading","webpack://mark2/webpack/startup"],"sourcesContent":["var deferred = [];\n__webpack_require__.O = function(result, chunkIds, fn, priority) {\n\tif(chunkIds) {\n\t\tpriority = priority || 0;\n\t\tfor(var i = deferred.length; i > 0 && deferred[i - 1][2] > priority; i--) deferred[i] = deferred[i - 1];\n\t\tdeferred[i] = [chunkIds, fn, priority];\n\t\treturn;\n\t}\n\tvar notFulfilled = Infinity;\n\tfor (var i = 0; i < deferred.length; i++) {\n\t\tvar chunkIds = deferred[i][0];\n\t\tvar fn = deferred[i][1];\n\t\tvar priority = deferred[i][2];\n\t\tvar fulfilled = true;\n\t\tfor (var j = 0; j < chunkIds.length; j++) {\n\t\t\tif ((priority & 1 === 0 || notFulfilled >= priority) && Object.keys(__webpack_require__.O).every(function(key) { return __webpack_require__.O[key](chunkIds[j]); })) {\n\t\t\t\tchunkIds.splice(j--, 1);\n\t\t\t} else {\n\t\t\t\tfulfilled = false;\n\t\t\t\tif(priority < notFulfilled) notFulfilled = priority;\n\t\t\t}\n\t\t}\n\t\tif(fulfilled) {\n\t\t\tdeferred.splice(i--, 1)\n\t\t\tvar r = fn();\n\t\t\tif (r !== undefined) result = r;\n\t\t}\n\t}\n\treturn result;\n};","/**\n * Portuguese (Brazil) translations\n * Default language for mark2 application\n */\n\nexport default {\n  // Meta information\n  meta: {\n    code: 'pt',\n    name: 'Português',\n    nativeName: 'Português (Brasil)',\n    direction: 'ltr'\n  },\n\n  // Application\n  app: {\n    title: 'mark2 - Markdown para Mapa Mental',\n    description: 'Transforme texto Markdown em mapas mentais interativos',\n    loading: 'Carregando...',\n    error: 'Erro',\n    success: 'Sucesso'\n  },\n\n  // Navigation and Header\n  header: {\n    title: 'mark2',\n    subtitle: 'Markdown para Mapa Mental'\n  },\n\n  // Buttons and Actions\n  buttons: {\n    save: 'Salvar',\n    cancel: 'Cancelar',\n    close: 'Fechar',\n    clear: 'Limpar',\n    example: 'Exemplo',\n    export: 'Exportar',\n    import: 'Importar',\n    help: 'Ajuda',\n    settings: 'Configurações',\n    theme: 'Tema',\n    language: 'Idioma',\n    zoomIn: 'Aumentar zoom',\n    zoomOut: 'Diminuir zoom',\n    fitScreen: 'Ajustar à tela',\n    reset: 'Resetar',\n    copy: 'Copiar',\n    paste: 'Colar',\n    undo: 'Desfazer',\n    redo: 'Refazer'\n  },\n\n  // Editor Panel\n  editor: {\n    title: 'Editor Markdown',\n    placeholder: `Digite seu texto markdown aqui...\n\nExemplo:\n# Título Principal\n## Subtítulo\n- Item da lista\n- Outro item`,\n    wordCount: 'palavras',\n    lineCount: 'linhas',\n    characterCount: 'caracteres',\n    saved: 'Salvo automaticamente',\n    unsaved: 'Alterações não salvas'\n  },\n\n  // Mind Map\n  mindMap: {\n    title: 'Mapa Mental',\n    generating: 'Gerando mapa mental...',\n    empty: 'Digite texto markdown para ver seu mapa mental',\n    error: 'Não foi possível gerar o mapa mental',\n    errorDetails: 'Verifique se o texto markdown está formatado corretamente',\n    nodeSelected: 'Nó selecionado',\n    nodeEdit: 'Clique duas vezes para editar',\n    nodeDelete: 'Pressione Delete para remover',\n    connectionHover: 'Conexão entre nós',\n    zoomLevel: 'Nível de zoom: {level}%'\n  },\n\n  // Themes\n  themes: {\n    title: 'Escolher Tema',\n    light: 'Claro',\n    dark: 'Escuro',\n    blue: 'Azul',\n    green: 'Verde',\n    orange: 'Laranja',\n    description: {\n      light: 'Fundo branco limpo com texto preto',\n      dark: 'Modo escuro para uso confortável em pouca luz',\n      blue: 'Paleta de cores azul profissional',\n      green: 'Tons de verde inspirados na natureza',\n      orange: 'Tema laranja energético'\n    }\n  },\n\n  // Languages\n  languages: {\n    title: 'Escolher Idioma',\n    portuguese: 'Português',\n    english: 'English',\n    spanish: 'Español',\n    systemDefault: 'Padrão do sistema'\n  },\n\n  // Help and Instructions\n  help: {\n    title: 'Como usar o mark2',\n    introduction: 'O mark2 cria mapas mentais organizados em hierarquia radial, com cores diferentes para cada nível:',\n    hierarchy: {\n      title: 'Estrutura Hierárquica:',\n      center: 'Centro: Título principal (#) - núcleo do mapa',\n      sections: 'Primeiro nível: Seções (##) em azul - conectadas ao centro',\n      subsections: 'Segundo nível: Subsections (###) em roxo - filhas das seções',\n      items: 'Terceiro nível: Itens (-) em verde - filhos das subsections'\n    },\n    instructions: {\n      headers: 'Use # para o tópico central (aparece no centro do mapa)',\n      subheaders: 'Use ## para seções principais (nós azuis ao redor do centro)',\n      subsubheaders: 'Use ### para subsections (nós roxos, filhos das seções)',\n      bullets: 'Use - para itens específicos (nós verdes, filhos das subsections)',\n      numbers: 'Use números para listas ordenadas',\n      text: 'Texto puro serve como documentação e contexto (não vira nós visuais)'\n    },\n    supportText: {\n      title: 'Texto de Apoio:',\n      description: 'Texto sem marcação (como \"O Atomic Design é uma metodologia...\") serve para:',\n      documentation: '• Documentação e explicações detalhadas',\n      context: '• Contexto e informações complementares',\n      reference: '• Material de referência e apoio',\n      note: 'Este texto não aparece como nós no mapa, mas ajuda a entender o conteúdo.'\n    },\n    example: 'Clique em \"Exemplo\" para ver como \"Conceitos Fundamentais\" usa texto de apoio.',\n    tips: {\n      title: 'Navegação:',\n      zoom: 'Use os controles de zoom para navegar pelo mapa',\n      drag: 'Arraste para mover a visualização',\n      select: 'Clique nos nós para selecioná-los',\n      hierarchy: 'Observe as cores: azul → roxo → verde = hierarquia'\n    }\n  },\n\n  // Export and Import\n  export: {\n    title: 'Exportar Mapa Mental',\n    formats: {\n      png: 'Imagem PNG',\n      svg: 'Vetor SVG',\n      pdf: 'Documento PDF',\n      json: 'Dados JSON'\n    },\n    options: {\n      includeBackground: 'Incluir fundo',\n      highResolution: 'Alta resolução',\n      transparent: 'Fundo transparente'\n    },\n    success: 'Mapa mental exportado com sucesso',\n    error: 'Erro ao exportar mapa mental'\n  },\n\n  // Settings\n  settings: {\n    title: 'Configurações',\n    general: 'Geral',\n    appearance: 'Aparência',\n    editor: 'Editor',\n    mindMap: 'Mapa Mental',\n    options: {\n      autoSave: 'Salvamento automático',\n      wordWrap: 'Quebra de linha automática',\n      lineNumbers: 'Números de linha',\n      minimap: 'Mini mapa',\n      animations: 'Animações',\n      sounds: 'Sons',\n      notifications: 'Notificações'\n    }\n  },\n\n  // Accessibility\n  accessibility: {\n    close: 'Fechar',\n    menu: 'Menu',\n    navigation: 'Navegação',\n    main: 'Conteúdo principal',\n    sidebar: 'Barra lateral',\n    toolbar: 'Barra de ferramentas',\n    dialog: 'Diálogo',\n    button: 'Botão',\n    textInput: 'Campo de texto',\n    checkbox: 'Caixa de seleção',\n    radioButton: 'Botão de opção',\n    select: 'Seletor',\n    link: 'Link',\n    image: 'Imagem',\n    video: 'Vídeo',\n    audio: 'Áudio'\n  },\n\n  // Error Messages\n  errors: {\n    general: 'Ocorreu um erro inesperado',\n    network: 'Erro de conexão de rede',\n    fileNotFound: 'Arquivo não encontrado',\n    invalidFormat: 'Formato de arquivo inválido',\n    saveError: 'Erro ao salvar',\n    loadError: 'Erro ao carregar',\n    parseError: 'Erro ao analisar markdown',\n    renderError: 'Erro ao renderizar mapa mental',\n    permissionDenied: 'Permissão negada',\n    quotaExceeded: 'Limite de armazenamento excedido'\n  },\n\n  // Success Messages\n  success: {\n    saved: 'Salvo com sucesso',\n    loaded: 'Carregado com sucesso',\n    exported: 'Exportado com sucesso',\n    imported: 'Importado com sucesso',\n    copied: 'Copiado para a área de transferência',\n    reset: 'Configurações resetadas'\n  },\n\n  // File Operations\n  file: {\n    new: 'Novo',\n    open: 'Abrir',\n    save: 'Salvar',\n    saveAs: 'Salvar como',\n    recent: 'Recentes',\n    untitled: 'Sem título',\n    modified: 'Modificado',\n    size: 'Tamanho',\n    created: 'Criado',\n    modified: 'Modificado'\n  },\n\n  // Mobile Interface\n  mobile: {\n    editor: 'Editor',\n    mindMap: 'Mapa',\n    menu: 'Menu',\n    back: 'Voltar',\n    fullscreen: 'Tela cheia',\n    exitFullscreen: 'Sair da tela cheia'\n  },\n\n  // Time and Date\n  time: {\n    now: 'agora',\n    today: 'hoje',\n    yesterday: 'ontem',\n    lastWeek: 'semana passada',\n    lastMonth: 'mês passado',\n    minute: 'minuto',\n    minutes: 'minutos',\n    hour: 'hora',\n    hours: 'horas',\n    day: 'dia',\n    days: 'dias',\n    week: 'semana',\n    weeks: 'semanas',\n    month: 'mês',\n    months: 'meses',\n    year: 'ano',\n    years: 'anos'\n  },\n\n  // Markdown Examples\n  examples: {\n    atomicDesign: {\n      title: 'Exemplo: Atomic Design',\n      description: 'Demonstração de como estruturar componentes usando Atomic Design'\n    },\n    projectPlanning: {\n      title: 'Exemplo: Planejamento de Projeto',\n      description: 'Como organizar fases e tarefas de um projeto'\n    },\n    studyNotes: {\n      title: 'Exemplo: Notas de Estudo',\n      description: 'Estruturação de conteúdo acadêmico em mapa mental'\n    }\n  }\n}\n","/**\n * English translations\n * International language for mark2 application\n */\n\nexport default {\n  // Meta information\n  meta: {\n    code: 'en',\n    name: 'English',\n    nativeName: 'English',\n    direction: 'ltr'\n  },\n\n  // Application\n  app: {\n    title: 'mark2 - Markdown to Mind Map',\n    description: 'Transform Markdown text into interactive mind maps',\n    loading: 'Loading...',\n    error: 'Error',\n    success: 'Success'\n  },\n\n  // Navigation and Header\n  header: {\n    title: 'mark2',\n    subtitle: 'Markdown to Mind Map'\n  },\n\n  // Buttons and Actions\n  buttons: {\n    save: 'Save',\n    cancel: 'Cancel',\n    close: 'Close',\n    clear: 'Clear',\n    example: 'Example',\n    export: 'Export',\n    import: 'Import',\n    help: 'Help',\n    settings: 'Settings',\n    theme: 'Theme',\n    language: 'Language',\n    zoomIn: 'Zoom in',\n    zoomOut: 'Zoom out',\n    fitScreen: 'Fit to screen',\n    reset: 'Reset',\n    copy: 'Copy',\n    paste: 'Paste',\n    undo: 'Undo',\n    redo: 'Redo'\n  },\n\n  // Editor Panel\n  editor: {\n    title: 'Markdown Editor',\n    placeholder: `Enter your markdown text here...\n\nExample:\n# Main Title\n## Subtitle\n- List item\n- Another item`,\n    wordCount: 'words',\n    lineCount: 'lines',\n    characterCount: 'characters',\n    saved: 'Auto-saved',\n    unsaved: 'Unsaved changes'\n  },\n\n  // Mind Map\n  mindMap: {\n    title: 'Mind Map',\n    generating: 'Generating mind map...',\n    empty: 'Enter markdown text to see your mind map',\n    error: 'Unable to generate mind map',\n    errorDetails: 'Please check if the markdown text is properly formatted',\n    nodeSelected: 'Node selected',\n    nodeEdit: 'Double-click to edit',\n    nodeDelete: 'Press Delete to remove',\n    connectionHover: 'Connection between nodes',\n    zoomLevel: 'Zoom level: {level}%'\n  },\n\n  // Themes\n  themes: {\n    title: 'Choose Theme',\n    light: 'Light',\n    dark: 'Dark',\n    blue: 'Blue',\n    green: 'Green',\n    orange: 'Orange',\n    description: {\n      light: 'Clean white background with black text',\n      dark: 'Dark mode for comfortable low-light usage',\n      blue: 'Professional blue color palette',\n      green: 'Nature-inspired green tones',\n      orange: 'Energetic orange theme'\n    }\n  },\n\n  // Languages\n  languages: {\n    title: 'Choose Language',\n    portuguese: 'Português',\n    english: 'English',\n    spanish: 'Español',\n    systemDefault: 'System default'\n  },\n\n  // Help and Instructions\n  help: {\n    title: 'How to use mark2',\n    introduction: 'mark2 creates mind maps organized in radial hierarchy, with different colors for each level:',\n    hierarchy: {\n      title: 'Hierarchical Structure:',\n      center: 'Center: Main title (#) - core of the map',\n      sections: 'First level: Sections (##) in blue - connected to center',\n      subsections: 'Second level: Subsections (###) in purple - children of sections',\n      items: 'Third level: Items (-) in green - children of subsections'\n    },\n    instructions: {\n      headers: 'Use # for the central topic (appears at the center of the map)',\n      subheaders: 'Use ## for main sections (blue nodes around the center)',\n      subsubheaders: 'Use ### for subsections (purple nodes, children of sections)',\n      bullets: 'Use - for specific items (green nodes, children of subsections)',\n      numbers: 'Use numbers for ordered lists',\n      text: 'Plain text serves as documentation and context (does not become visual nodes)'\n    },\n    supportText: {\n      title: 'Support Text:',\n      description: 'Text without markup (like \"Atomic Design is a methodology...\") serves for:',\n      documentation: '• Documentation and detailed explanations',\n      context: '• Context and complementary information',\n      reference: '• Reference material and support',\n      note: 'This text does not appear as nodes in the map, but helps understand the content.'\n    },\n    example: 'Click \"Example\" to see how \"Fundamental Concepts\" uses support text.',\n    tips: {\n      title: 'Navigation:',\n      zoom: 'Use zoom controls to navigate the map',\n      drag: 'Drag to move the view',\n      select: 'Click nodes to select them',\n      hierarchy: 'Notice the colors: blue → purple → green = hierarchy'\n    }\n  },\n\n  // Export and Import\n  export: {\n    title: 'Export Mind Map',\n    formats: {\n      png: 'PNG Image',\n      svg: 'SVG Vector',\n      pdf: 'PDF Document',\n      json: 'JSON Data'\n    },\n    options: {\n      includeBackground: 'Include background',\n      highResolution: 'High resolution',\n      transparent: 'Transparent background'\n    },\n    success: 'Mind map exported successfully',\n    error: 'Error exporting mind map'\n  },\n\n  // Settings\n  settings: {\n    title: 'Settings',\n    general: 'General',\n    appearance: 'Appearance',\n    editor: 'Editor',\n    mindMap: 'Mind Map',\n    options: {\n      autoSave: 'Auto-save',\n      wordWrap: 'Word wrap',\n      lineNumbers: 'Line numbers',\n      minimap: 'Minimap',\n      animations: 'Animations',\n      sounds: 'Sounds',\n      notifications: 'Notifications'\n    }\n  },\n\n  // Accessibility\n  accessibility: {\n    close: 'Close',\n    menu: 'Menu',\n    navigation: 'Navigation',\n    main: 'Main content',\n    sidebar: 'Sidebar',\n    toolbar: 'Toolbar',\n    dialog: 'Dialog',\n    button: 'Button',\n    textInput: 'Text input',\n    checkbox: 'Checkbox',\n    radioButton: 'Radio button',\n    select: 'Select',\n    link: 'Link',\n    image: 'Image',\n    video: 'Video',\n    audio: 'Audio'\n  },\n\n  // Error Messages\n  errors: {\n    general: 'An unexpected error occurred',\n    network: 'Network connection error',\n    fileNotFound: 'File not found',\n    invalidFormat: 'Invalid file format',\n    saveError: 'Error saving',\n    loadError: 'Error loading',\n    parseError: 'Error parsing markdown',\n    renderError: 'Error rendering mind map',\n    permissionDenied: 'Permission denied',\n    quotaExceeded: 'Storage quota exceeded'\n  },\n\n  // Success Messages\n  success: {\n    saved: 'Saved successfully',\n    loaded: 'Loaded successfully',\n    exported: 'Exported successfully',\n    imported: 'Imported successfully',\n    copied: 'Copied to clipboard',\n    reset: 'Settings reset'\n  },\n\n  // File Operations\n  file: {\n    new: 'New',\n    open: 'Open',\n    save: 'Save',\n    saveAs: 'Save as',\n    recent: 'Recent',\n    untitled: 'Untitled',\n    modified: 'Modified',\n    size: 'Size',\n    created: 'Created',\n    modified: 'Modified'\n  },\n\n  // Mobile Interface\n  mobile: {\n    editor: 'Editor',\n    mindMap: 'Mind Map',\n    menu: 'Menu',\n    back: 'Back',\n    fullscreen: 'Fullscreen',\n    exitFullscreen: 'Exit fullscreen'\n  },\n\n  // Time and Date\n  time: {\n    now: 'now',\n    today: 'today',\n    yesterday: 'yesterday',\n    lastWeek: 'last week',\n    lastMonth: 'last month',\n    minute: 'minute',\n    minutes: 'minutes',\n    hour: 'hour',\n    hours: 'hours',\n    day: 'day',\n    days: 'days',\n    week: 'week',\n    weeks: 'weeks',\n    month: 'month',\n    months: 'months',\n    year: 'year',\n    years: 'years'\n  },\n\n  // Markdown Examples\n  examples: {\n    atomicDesign: {\n      title: 'Example: Atomic Design',\n      description: 'Demonstration of how to structure components using Atomic Design'\n    },\n    projectPlanning: {\n      title: 'Example: Project Planning',\n      description: 'How to organize project phases and tasks'\n    },\n    studyNotes: {\n      title: 'Example: Study Notes',\n      description: 'Structuring academic content as a mind map'\n    }\n  }\n}\n","/**\n * Spanish translations\n * International language for mark2 application\n */\n\nexport default {\n  // Meta information\n  meta: {\n    code: 'es',\n    name: 'Español',\n    nativeName: 'Español',\n    direction: 'ltr'\n  },\n\n  // Application\n  app: {\n    title: 'mark2 - Markdown a Mapa Mental',\n    description: 'Transforma texto Markdown en mapas mentales interactivos',\n    loading: 'Cargando...',\n    error: 'Error',\n    success: 'Éxito'\n  },\n\n  // Navigation and Header\n  header: {\n    title: 'mark2',\n    subtitle: 'Markdown a Mapa Mental'\n  },\n\n  // Buttons and Actions\n  buttons: {\n    save: 'Guardar',\n    cancel: 'Cancelar',\n    close: 'Cerrar',\n    clear: 'Limpiar',\n    example: 'Ejemplo',\n    export: 'Exportar',\n    import: 'Importar',\n    help: 'Ayuda',\n    settings: 'Configuración',\n    theme: 'Tema',\n    language: 'Idioma',\n    zoomIn: 'Acercar',\n    zoomOut: 'Alejar',\n    fitScreen: 'Ajustar a pantalla',\n    reset: 'Restablecer',\n    copy: 'Copiar',\n    paste: 'Pegar',\n    undo: 'Deshacer',\n    redo: 'Rehacer'\n  },\n\n  // Editor Panel\n  editor: {\n    title: 'Editor Markdown',\n    placeholder: `Ingresa tu texto markdown aquí...\n\nEjemplo:\n# Título Principal\n## Subtítulo\n- Elemento de lista\n- Otro elemento`,\n    wordCount: 'palabras',\n    lineCount: 'líneas',\n    characterCount: 'caracteres',\n    saved: 'Guardado automáticamente',\n    unsaved: 'Cambios no guardados'\n  },\n\n  // Mind Map\n  mindMap: {\n    title: 'Mapa Mental',\n    generating: 'Generando mapa mental...',\n    empty: 'Ingresa texto markdown para ver tu mapa mental',\n    error: 'No se pudo generar el mapa mental',\n    errorDetails: 'Por favor verifica que el texto markdown esté formateado correctamente',\n    nodeSelected: 'Nodo seleccionado',\n    nodeEdit: 'Doble clic para editar',\n    nodeDelete: 'Presiona Suprimir para eliminar',\n    connectionHover: 'Conexión entre nodos',\n    zoomLevel: 'Nivel de zoom: {level}%'\n  },\n\n  // Themes\n  themes: {\n    title: 'Elegir Tema',\n    light: 'Claro',\n    dark: 'Oscuro',\n    blue: 'Azul',\n    green: 'Verde',\n    orange: 'Naranja',\n    description: {\n      light: 'Fondo blanco limpio con texto negro',\n      dark: 'Modo oscuro para uso cómodo con poca luz',\n      blue: 'Paleta de colores azul profesional',\n      green: 'Tonos verdes inspirados en la naturaleza',\n      orange: 'Tema naranja energético'\n    }\n  },\n\n  // Languages\n  languages: {\n    title: 'Elegir Idioma',\n    portuguese: 'Português',\n    english: 'English',\n    spanish: 'Español',\n    systemDefault: 'Predeterminado del sistema'\n  },\n\n  // Help and Instructions\n  help: {\n    title: 'Cómo usar mark2',\n    introduction: 'mark2 crea mapas mentales organizados en jerarquía radial, con colores diferentes para cada nivel:',\n    hierarchy: {\n      title: 'Estructura Jerárquica:',\n      center: 'Centro: Título principal (#) - núcleo del mapa',\n      sections: 'Primer nivel: Secciones (##) en azul - conectadas al centro',\n      subsections: 'Segundo nivel: Subsecciones (###) en morado - hijas de las secciones',\n      items: 'Tercer nivel: Elementos (-) en verde - hijos de las subsecciones'\n    },\n    instructions: {\n      headers: 'Usa # para el tópico central (aparece en el centro del mapa)',\n      subheaders: 'Usa ## para secciones principales (nodos azules alrededor del centro)',\n      subsubheaders: 'Usa ### para subsecciones (nodos morados, hijos de las secciones)',\n      bullets: 'Usa - para elementos específicos (nodos verdes, hijos de las subsecciones)',\n      numbers: 'Usa números para listas ordenadas',\n      text: 'Texto puro sirve como documentación y contexto (no se convierte en nodos visuales)'\n    },\n    supportText: {\n      title: 'Texto de Apoyo:',\n      description: 'Texto sin marcado (como \"El Diseño Atómico es una metodología...\") sirve para:',\n      documentation: '• Documentación y explicaciones detalladas',\n      context: '• Contexto e información complementaria',\n      reference: '• Material de referencia y apoyo',\n      note: 'Este texto no aparece como nodos en el mapa, pero ayuda a entender el contenido.'\n    },\n    example: 'Haz clic en \"Ejemplo\" para ver cómo \"Conceptos Fundamentales\" usa texto de apoyo.',\n    tips: {\n      title: 'Navegación:',\n      zoom: 'Usa los controles de zoom para navegar el mapa',\n      drag: 'Arrastra para mover la vista',\n      select: 'Haz clic en los nodos para seleccionarlos',\n      hierarchy: 'Observa los colores: azul → morado → verde = jerarquía'\n    }\n  },\n\n  // Export and Import\n  export: {\n    title: 'Exportar Mapa Mental',\n    formats: {\n      png: 'Imagen PNG',\n      svg: 'Vector SVG',\n      pdf: 'Documento PDF',\n      json: 'Datos JSON'\n    },\n    options: {\n      includeBackground: 'Incluir fondo',\n      highResolution: 'Alta resolución',\n      transparent: 'Fondo transparente'\n    },\n    success: 'Mapa mental exportado exitosamente',\n    error: 'Error al exportar mapa mental'\n  },\n\n  // Settings\n  settings: {\n    title: 'Configuración',\n    general: 'General',\n    appearance: 'Apariencia',\n    editor: 'Editor',\n    mindMap: 'Mapa Mental',\n    options: {\n      autoSave: 'Guardado automático',\n      wordWrap: 'Ajuste de línea',\n      lineNumbers: 'Números de línea',\n      minimap: 'Minimapa',\n      animations: 'Animaciones',\n      sounds: 'Sonidos',\n      notifications: 'Notificaciones'\n    }\n  },\n\n  // Accessibility\n  accessibility: {\n    close: 'Cerrar',\n    menu: 'Menú',\n    navigation: 'Navegación',\n    main: 'Contenido principal',\n    sidebar: 'Barra lateral',\n    toolbar: 'Barra de herramientas',\n    dialog: 'Diálogo',\n    button: 'Botón',\n    textInput: 'Entrada de texto',\n    checkbox: 'Casilla de verificación',\n    radioButton: 'Botón de opción',\n    select: 'Selector',\n    link: 'Enlace',\n    image: 'Imagen',\n    video: 'Video',\n    audio: 'Audio'\n  },\n\n  // Error Messages\n  errors: {\n    general: 'Ocurrió un error inesperado',\n    network: 'Error de conexión de red',\n    fileNotFound: 'Archivo no encontrado',\n    invalidFormat: 'Formato de archivo inválido',\n    saveError: 'Error al guardar',\n    loadError: 'Error al cargar',\n    parseError: 'Error al analizar markdown',\n    renderError: 'Error al renderizar mapa mental',\n    permissionDenied: 'Permiso denegado',\n    quotaExceeded: 'Cuota de almacenamiento excedida'\n  },\n\n  // Success Messages\n  success: {\n    saved: 'Guardado exitosamente',\n    loaded: 'Cargado exitosamente',\n    exported: 'Exportado exitosamente',\n    imported: 'Importado exitosamente',\n    copied: 'Copiado al portapapeles',\n    reset: 'Configuración restablecida'\n  },\n\n  // File Operations\n  file: {\n    new: 'Nuevo',\n    open: 'Abrir',\n    save: 'Guardar',\n    saveAs: 'Guardar como',\n    recent: 'Recientes',\n    untitled: 'Sin título',\n    modified: 'Modificado',\n    size: 'Tamaño',\n    created: 'Creado',\n    modified: 'Modificado'\n  },\n\n  // Mobile Interface\n  mobile: {\n    editor: 'Editor',\n    mindMap: 'Mapa',\n    menu: 'Menú',\n    back: 'Atrás',\n    fullscreen: 'Pantalla completa',\n    exitFullscreen: 'Salir de pantalla completa'\n  },\n\n  // Time and Date\n  time: {\n    now: 'ahora',\n    today: 'hoy',\n    yesterday: 'ayer',\n    lastWeek: 'semana pasada',\n    lastMonth: 'mes pasado',\n    minute: 'minuto',\n    minutes: 'minutos',\n    hour: 'hora',\n    hours: 'horas',\n    day: 'día',\n    days: 'días',\n    week: 'semana',\n    weeks: 'semanas',\n    month: 'mes',\n    months: 'meses',\n    year: 'año',\n    years: 'años'\n  },\n\n  // Markdown Examples\n  examples: {\n    atomicDesign: {\n      title: 'Ejemplo: Diseño Atómico',\n      description: 'Demostración de cómo estructurar componentes usando Diseño Atómico'\n    },\n    projectPlanning: {\n      title: 'Ejemplo: Planificación de Proyecto',\n      description: 'Cómo organizar fases y tareas de un proyecto'\n    },\n    studyNotes: {\n      title: 'Ejemplo: Notas de Estudio',\n      description: 'Estructuración de contenido académico en mapa mental'\n    }\n  }\n}\n","/**\n * Language Manager\n * Handles internationalization (i18n) for the mark2 application\n */\n\n// Import language files\nimport pt from './locales/pt.js'\nimport en from './locales/en.js'\nimport es from './locales/es.js'\n\nclass LanguageManager {\n  constructor() {\n    this.languages = {\n      pt,\n      en,\n      es\n    }\n\n    this.defaultLanguage = 'pt'\n    this.currentLanguage = this.defaultLanguage\n    this.fallbackLanguage = 'en'\n    this.subscribers = []\n\n    this.init()\n  }\n\n  init() {\n    // Load stored language or detect system language\n    this.loadStoredLanguage()\n\n    // Apply initial language\n    this.applyLanguage(this.currentLanguage)\n\n    // Listen for system language changes\n    this.listenForSystemLanguageChanges()\n  }\n\n  loadStoredLanguage() {\n    try {\n      const stored = localStorage.getItem('preferred-language')\n      if (stored && this.isLanguageAvailable(stored)) {\n        this.currentLanguage = stored\n      } else {\n        // Detect system language\n        this.currentLanguage = this.detectSystemLanguage()\n      }\n    } catch (error) {\n      console.warn('Could not load language from localStorage:', error)\n      this.currentLanguage = this.defaultLanguage\n    }\n  }\n\n  detectSystemLanguage() {\n    if (typeof navigator === 'undefined') {\n      return this.defaultLanguage\n    }\n\n    // Get browser language\n    const browserLang = navigator.language || navigator.languages?.[0] || this.defaultLanguage\n\n    // Extract language code (e.g., 'pt-BR' -> 'pt')\n    const langCode = browserLang.split('-')[0].toLowerCase()\n\n    // Return if available, otherwise fallback\n    return this.isLanguageAvailable(langCode) ? langCode : this.defaultLanguage\n  }\n\n  isLanguageAvailable(langCode) {\n    return Object.keys(this.languages).includes(langCode)\n  }\n\n  setLanguage(langCode) {\n    if (!this.isLanguageAvailable(langCode)) {\n      console.warn(`Language '${langCode}' is not available. Available languages:`, Object.keys(this.languages))\n      return false\n    }\n\n    const previousLanguage = this.currentLanguage\n    this.currentLanguage = langCode\n\n    this.applyLanguage(langCode)\n    this.storeLanguage(langCode)\n    this.notifySubscribers(langCode, previousLanguage)\n\n    return true\n  }\n\n  applyLanguage(langCode) {\n    if (typeof document === 'undefined') return\n\n    // Set document language\n    document.documentElement.lang = langCode\n\n    // Set document direction (for RTL languages)\n    const language = this.languages[langCode]\n    if (language?.meta?.direction) {\n      document.documentElement.dir = language.meta.direction\n    }\n\n    // Update page title\n    if (language?.app?.title) {\n      document.title = language.app.title\n    }\n\n    // Update meta description\n    const metaDescription = document.querySelector('meta[name=\"description\"]')\n    if (metaDescription && language?.app?.description) {\n      metaDescription.content = language.app.description\n    }\n  }\n\n  storeLanguage(langCode) {\n    try {\n      localStorage.setItem('preferred-language', langCode)\n    } catch (error) {\n      console.warn('Could not store language in localStorage:', error)\n    }\n  }\n\n  getCurrentLanguage() {\n    return this.currentLanguage\n  }\n\n  getAvailableLanguages() {\n    return Object.keys(this.languages).map(code => ({\n      code,\n      name: this.languages[code].meta?.name || code,\n      nativeName: this.languages[code].meta?.nativeName || code,\n      direction: this.languages[code].meta?.direction || 'ltr'\n    }))\n  }\n\n  getLanguageDisplayName(langCode) {\n    const language = this.languages[langCode]\n    return language?.meta?.nativeName || language?.meta?.name || langCode\n  }\n\n  // Translation methods\n  t(key, params = {}) {\n    return this.translate(key, params)\n  }\n\n  translate(key, params = {}) {\n    const value = this.getTranslation(key, this.currentLanguage)\n\n    if (value === null) {\n      // Try fallback language\n      const fallbackValue = this.getTranslation(key, this.fallbackLanguage)\n      if (fallbackValue !== null) {\n        console.warn(`Translation missing for key '${key}' in language '${this.currentLanguage}', using fallback`)\n        return this.interpolate(fallbackValue, params)\n      }\n\n      // Return key if no translation found\n      console.warn(`Translation missing for key '${key}' in both current and fallback languages`)\n      return key\n    }\n\n    return this.interpolate(value, params)\n  }\n\n  getTranslation(key, langCode) {\n    const language = this.languages[langCode]\n    if (!language) {\n      return null\n    }\n\n    // Navigate through nested object using dot notation\n    const keys = key.split('.')\n    let current = language\n\n    for (const k of keys) {\n      if (current && typeof current === 'object' && k in current) {\n        current = current[k]\n      } else {\n        return null\n      }\n    }\n\n    return typeof current === 'string' ? current : null\n  }\n\n  interpolate(text, params) {\n    if (!params || Object.keys(params).length === 0) {\n      return text\n    }\n\n    return text.replace(/\\{([^}]+)\\}/g, (match, key) => {\n      return params[key] !== undefined ? params[key] : match\n    })\n  }\n\n  // Pluralization\n  plural(key, count, params = {}) {\n    const pluralKey = this.getPluralKey(key, count)\n    const mergedParams = { ...params, count }\n    return this.translate(pluralKey, mergedParams)\n  }\n\n  getPluralKey(key, count) {\n    // Simple English-style pluralization\n    // For more complex pluralization rules, this would need to be language-specific\n    if (count === 1) {\n      return `${key}.one`\n    } else {\n      return `${key}.other`\n    }\n  }\n\n  // Time formatting\n  formatTime(key, value) {\n    if (value === 1) {\n      return `1 ${this.translate(`time.${key}`)}`\n    } else {\n      return `${value} ${this.translate(`time.${key}s`)}`\n    }\n  }\n\n  // Date formatting\n  formatDate(date, options = {}) {\n    const language = this.languages[this.currentLanguage]\n    const locale = language?.meta?.code || this.currentLanguage\n\n    try {\n      return new Intl.DateTimeFormat(locale, options).format(date)\n    } catch (error) {\n      console.warn('Error formatting date:', error)\n      return date.toString()\n    }\n  }\n\n  // Number formatting\n  formatNumber(number, options = {}) {\n    const language = this.languages[this.currentLanguage]\n    const locale = language?.meta?.code || this.currentLanguage\n\n    try {\n      return new Intl.NumberFormat(locale, options).format(number)\n    } catch (error) {\n      console.warn('Error formatting number:', error)\n      return number.toString()\n    }\n  }\n\n  // Currency formatting\n  formatCurrency(amount, currency = 'USD', options = {}) {\n    return this.formatNumber(amount, {\n      style: 'currency',\n      currency,\n      ...options\n    })\n  }\n\n  // Subscription system\n  subscribe(callback) {\n    if (typeof callback === 'function') {\n      this.subscribers.push(callback)\n\n      // Return unsubscribe function\n      return () => {\n        const index = this.subscribers.indexOf(callback)\n        if (index > -1) {\n          this.subscribers.splice(index, 1)\n        }\n      }\n    }\n  }\n\n  notifySubscribers(newLanguage, previousLanguage) {\n    this.subscribers.forEach(callback => {\n      try {\n        callback(newLanguage, previousLanguage)\n      } catch (error) {\n        console.error('Error in language change subscriber:', error)\n      }\n    })\n  }\n\n  listenForSystemLanguageChanges() {\n    if (typeof window === 'undefined') return\n\n    window.addEventListener('languagechange', () => {\n      // Only auto-switch if user hasn't manually set a language\n      const hasManualLanguage = localStorage.getItem('preferred-language')\n      if (!hasManualLanguage) {\n        const systemLanguage = this.detectSystemLanguage()\n        this.setLanguage(systemLanguage)\n      }\n    })\n  }\n\n  resetToSystemLanguage() {\n    try {\n      localStorage.removeItem('preferred-language')\n      const systemLanguage = this.detectSystemLanguage()\n      this.setLanguage(systemLanguage)\n    } catch (error) {\n      console.warn('Could not reset to system language:', error)\n    }\n  }\n\n  // Utility methods for adding new languages\n  addLanguage(langCode, translations) {\n    if (this.isLanguageAvailable(langCode)) {\n      console.warn(`Language '${langCode}' already exists. Use updateLanguage() to modify it.`)\n      return false\n    }\n\n    this.languages[langCode] = translations\n    return true\n  }\n\n  updateLanguage(langCode, translations) {\n    if (!this.isLanguageAvailable(langCode)) {\n      console.warn(`Language '${langCode}' does not exist. Use addLanguage() to create it.`)\n      return false\n    }\n\n    this.languages[langCode] = { ...this.languages[langCode], ...translations }\n\n    // Refresh current language if it's being updated\n    if (langCode === this.currentLanguage) {\n      this.applyLanguage(langCode)\n      this.notifySubscribers(langCode, langCode)\n    }\n\n    return true\n  }\n\n  removeLanguage(langCode) {\n    if (langCode === this.defaultLanguage) {\n      console.warn('Cannot remove default language')\n      return false\n    }\n\n    if (!this.isLanguageAvailable(langCode)) {\n      return false\n    }\n\n    delete this.languages[langCode]\n\n    // Switch to default if current language was removed\n    if (langCode === this.currentLanguage) {\n      this.setLanguage(this.defaultLanguage)\n    }\n\n    return true\n  }\n\n  // Export/Import functionality\n  exportLanguageSettings() {\n    return {\n      currentLanguage: this.currentLanguage,\n      availableLanguages: Object.keys(this.languages),\n      systemLanguage: this.detectSystemLanguage()\n    }\n  }\n\n  importLanguageSettings(settings) {\n    if (settings && settings.currentLanguage && this.isLanguageAvailable(settings.currentLanguage)) {\n      this.setLanguage(settings.currentLanguage)\n      return true\n    }\n    return false\n  }\n\n  destroy() {\n    this.subscribers = []\n  }\n}\n\n// Create singleton instance\nconst languageManager = new LanguageManager()\n\nexport default languageManager\nexport { LanguageManager }\n","/**\n * Theme Manager\n * Handles theme switching and persistence\n */\n\nclass ThemeManager {\n  constructor() {\n    this.themes = ['light', 'dark', 'blue', 'green', 'orange']\n    this.currentTheme = 'light'\n    this.subscribers = []\n\n    this.init()\n  }\n\n  init() {\n    // Load stored theme or default\n    this.loadStoredTheme()\n\n    // Apply initial theme\n    this.applyTheme(this.currentTheme)\n\n    // Listen for system theme changes\n    this.listenForSystemThemeChanges()\n  }\n\n  loadStoredTheme() {\n    try {\n      const stored = localStorage.getItem('preferred-theme')\n      if (stored && this.themes.includes(stored)) {\n        this.currentTheme = stored\n      } else {\n        // Detect system preference\n        this.currentTheme = this.getSystemTheme()\n      }\n    } catch (error) {\n      console.warn('Could not load theme from localStorage:', error)\n      this.currentTheme = 'light'\n    }\n  }\n\n  getSystemTheme() {\n    if (typeof window !== 'undefined' && window.matchMedia) {\n      return window.matchMedia('(prefers-color-scheme: dark)').matches ? 'dark' : 'light'\n    }\n    return 'light'\n  }\n\n  setTheme(themeName) {\n    if (!this.themes.includes(themeName)) {\n      console.warn(`Theme '${themeName}' is not available. Available themes:`, this.themes)\n      return false\n    }\n\n    const previousTheme = this.currentTheme\n    this.currentTheme = themeName\n\n    this.applyTheme(themeName)\n    this.storeTheme(themeName)\n    this.notifySubscribers(themeName, previousTheme)\n\n    return true\n  }\n\n  applyTheme(themeName) {\n    if (typeof document === 'undefined') return\n\n    // Remove all existing theme classes from both body and documentElement\n    this.themes.forEach(theme => {\n      document.body.classList.remove(`theme-${theme}`)\n      document.documentElement.classList.remove(`theme-${theme}`)\n    })\n\n    // Add new theme class to documentElement (:root)\n    document.documentElement.classList.add(`theme-${themeName}`)\n\n    // Update meta theme-color for mobile browsers\n    this.updateMetaThemeColor(themeName)\n  }\n\n  updateMetaThemeColor(themeName) {\n    const themeColors = {\n      light: '#ffffff',\n      dark: '#0f172a',\n      blue: '#eff6ff',\n      green: '#f0fdf4',\n      orange: '#fff7ed'\n    }\n\n    let metaThemeColor = document.querySelector('meta[name=\"theme-color\"]')\n    if (!metaThemeColor) {\n      metaThemeColor = document.createElement('meta')\n      metaThemeColor.name = 'theme-color'\n      document.head.appendChild(metaThemeColor)\n    }\n\n    metaThemeColor.content = themeColors[themeName] || themeColors.light\n  }\n\n  storeTheme(themeName) {\n    try {\n      localStorage.setItem('preferred-theme', themeName)\n    } catch (error) {\n      console.warn('Could not store theme in localStorage:', error)\n    }\n  }\n\n  getCurrentTheme() {\n    return this.currentTheme\n  }\n\n  getAvailableThemes() {\n    return [...this.themes]\n  }\n\n  getThemeDisplayName(themeName) {\n    const displayNames = {\n      light: 'Light',\n      dark: 'Dark',\n      blue: 'Blue',\n      green: 'Green',\n      orange: 'Orange'\n    }\n\n    return displayNames[themeName] || themeName\n  }\n\n  getThemeDescription(themeName) {\n    const descriptions = {\n      light: 'Clean white background with black text',\n      dark: 'Dark mode for comfortable low-light usage',\n      blue: 'Professional blue color palette',\n      green: 'Nature-inspired green tones',\n      orange: 'Energetic orange theme'\n    }\n\n    return descriptions[themeName] || ''\n  }\n\n  toggleTheme() {\n    const currentIndex = this.themes.indexOf(this.currentTheme)\n    const nextIndex = (currentIndex + 1) % this.themes.length\n    this.setTheme(this.themes[nextIndex])\n  }\n\n  cycleTheme() {\n    this.toggleTheme()\n  }\n\n  subscribe(callback) {\n    if (typeof callback === 'function') {\n      this.subscribers.push(callback)\n\n      // Return unsubscribe function\n      return () => {\n        const index = this.subscribers.indexOf(callback)\n        if (index > -1) {\n          this.subscribers.splice(index, 1)\n        }\n      }\n    }\n  }\n\n  notifySubscribers(newTheme, previousTheme) {\n    this.subscribers.forEach(callback => {\n      try {\n        callback(newTheme, previousTheme)\n      } catch (error) {\n        console.error('Error in theme change subscriber:', error)\n      }\n    })\n  }\n\n  listenForSystemThemeChanges() {\n    if (typeof window === 'undefined' || !window.matchMedia) return\n\n    const mediaQuery = window.matchMedia('(prefers-color-scheme: dark)')\n\n    const handleSystemThemeChange = (e) => {\n      // Only auto-switch if user hasn't manually set a theme\n      const hasManualTheme = localStorage.getItem('preferred-theme')\n      if (!hasManualTheme) {\n        const systemTheme = e.matches ? 'dark' : 'light'\n        this.setTheme(systemTheme)\n      }\n    }\n\n    // Modern browsers\n    if (mediaQuery.addEventListener) {\n      mediaQuery.addEventListener('change', handleSystemThemeChange)\n    } else {\n      // Fallback for older browsers\n      mediaQuery.addListener(handleSystemThemeChange)\n    }\n  }\n\n  resetToSystemTheme() {\n    try {\n      localStorage.removeItem('preferred-theme')\n      const systemTheme = this.getSystemTheme()\n      this.setTheme(systemTheme)\n    } catch (error) {\n      console.warn('Could not reset to system theme:', error)\n    }\n  }\n\n  exportThemeSettings() {\n    return {\n      currentTheme: this.currentTheme,\n      availableThemes: this.themes,\n      systemTheme: this.getSystemTheme()\n    }\n  }\n\n  importThemeSettings(settings) {\n    if (settings && settings.currentTheme && this.themes.includes(settings.currentTheme)) {\n      this.setTheme(settings.currentTheme)\n      return true\n    }\n    return false\n  }\n\n  // Utility method to get CSS custom property value\n  getCSSCustomProperty(propertyName) {\n    if (typeof document === 'undefined') return null\n\n    return getComputedStyle(document.documentElement)\n      .getPropertyValue(propertyName)\n      .trim()\n  }\n\n  // Utility method to set CSS custom property value\n  setCSSCustomProperty(propertyName, value) {\n    if (typeof document === 'undefined') return\n\n    document.documentElement.style.setProperty(propertyName, value)\n  }\n\n  destroy() {\n    this.subscribers = []\n  }\n}\n\n// Create singleton instance\nconst themeManager = new ThemeManager()\n\nexport default themeManager\nexport { ThemeManager }\n","/**\n * Markdown Parser Utility\n * Converts markdown text into a structured data format for mind map generation\n */\n\nexport const parseHeaders = (text) => {\n  if (!text || typeof text !== 'string') {\n    return []\n  }\n\n  const headerRegex = /^(#{1,6})\\s+(.+)$/gm\n  const headers = []\n  let match\n\n  while ((match = headerRegex.exec(text)) !== null) {\n    headers.push({\n      level: match[1].length,\n      text: match[2].trim(),\n      index: match.index,\n      raw: match[0]\n    })\n  }\n\n  return headers\n}\n\nexport const parseList = (text) => {\n  if (!text || typeof text !== 'string') {\n    return []\n  }\n\n  const lines = text.split('\\n')\n  const items = []\n  let charIndex = 0\n\n  for (let i = 0; i < lines.length; i++) {\n    const line = lines[i].trim()\n\n    // Unordered list (-, *, +)\n    const unorderedMatch = line.match(/^[-*+]\\s+(.+)$/)\n    if (unorderedMatch) {\n      items.push({\n        text: unorderedMatch[1].trim(),\n        type: 'unordered',\n        level: (lines[i].match(/^\\s*/)[0].length / 2) + 1,\n        index: charIndex\n      })\n    }\n\n    // Ordered list (1., 2., etc.)\n    const orderedMatch = line.match(/^\\d+\\.\\s+(.+)$/)\n    if (orderedMatch) {\n      items.push({\n        text: orderedMatch[1].trim(),\n        type: 'ordered',\n        level: (lines[i].match(/^\\s*/)[0].length / 2) + 1,\n        index: charIndex\n      })\n    }\n\n    // Incrementar posição do caractere (linha + quebra de linha)\n    charIndex += lines[i].length + 1\n  }\n\n  return items\n}\n\nexport const parseMarkdown = (markdown) => {\n  if (!markdown || typeof markdown !== 'string') {\n    return {\n      title: '',\n      sections: [],\n      nodes: [],\n      error: null\n    }\n  }\n\n  try {\n    const headers = parseHeaders(markdown)\n    const lists = parseList(markdown)\n    const lines = markdown.split('\\n')\n\n    if (headers.length === 0) {\n      return {\n        title: 'Mind Map',\n        sections: [],\n        nodes: [],\n        error: 'No headers found in markdown'\n      }\n    }\n\n    // Build hierarchical structure\n    const root = {\n      title: headers[0].text,\n      level: headers[0].level,\n      sections: [],\n      items: []\n    }\n\n    let currentSection = null\n    let currentSubsection = null\n\n    // Process headers and build hierarchy\n    for (let i = 1; i < headers.length; i++) {\n      const header = headers[i]\n\n      if (header.level === 2) {\n        // New main section (H2)\n        currentSection = {\n          title: header.text,\n          level: header.level,\n          items: [],\n          subsections: [],\n          startIndex: header.index\n        }\n        root.sections.push(currentSection)\n        currentSubsection = null\n      } else if (header.level === 3 && currentSection) {\n        // New subsection (H3)\n        currentSubsection = {\n          title: header.text,\n          level: header.level,\n          items: [],\n          startIndex: header.index\n        }\n        currentSection.subsections.push(currentSubsection)\n      }\n    }\n\n    // Process lists and associate them with the correct section/subsection\n    lists.forEach(item => {\n      // Find which section this list item belongs to\n      let targetSection = null\n      let targetSubsection = null\n\n      // Find the most recent section before this item\n      for (const section of root.sections) {\n        if (section.startIndex < item.index) {\n          targetSection = section\n        } else {\n          break\n        }\n      }\n\n      if (targetSection) {\n        // Find the most recent subsection within this section before this item\n        for (const subsection of targetSection.subsections) {\n          if (subsection.startIndex < item.index) {\n            // Check if there's a next section that comes before this item\n            const nextSectionIndex = root.sections.findIndex(s => s === targetSection) + 1\n            const nextSection = root.sections[nextSectionIndex]\n\n            if (!nextSection || item.index < nextSection.startIndex) {\n              targetSubsection = subsection\n            }\n          } else {\n            break\n          }\n        }\n      }\n\n      // Add item to the most specific section/subsection\n      if (targetSubsection) {\n        targetSubsection.items.push(item.text)\n      } else if (targetSection) {\n        targetSection.items.push(item.text)\n      } else {\n        root.items.push(item.text)\n      }\n    })\n\n    return {\n      title: root.title,\n      sections: root.sections,\n      nodes: buildNodeStructure(root),\n      error: null\n    }\n  } catch (error) {\n    return {\n      title: '',\n      sections: [],\n      nodes: [],\n      error: error.message\n    }\n  }\n}\n\nconst buildNodeStructure = (data) => {\n  const nodes = []\n  let nodeId = 1\n\n  // Root node\n  const rootNode = {\n    id: nodeId++,\n    text: data.title,\n    level: 1,\n    children: []\n  }\n  nodes.push(rootNode)\n\n  // Section nodes\n  data.sections.forEach(section => {\n    const sectionNode = {\n      id: nodeId++,\n      text: section.title,\n      level: 2,\n      parent: rootNode.id,\n      children: []\n    }\n    nodes.push(sectionNode)\n    rootNode.children.push(sectionNode.id)\n\n    // Direct section items (not under subsections)\n    section.items.forEach(item => {\n      const itemNode = {\n        id: nodeId++,\n        text: item,\n        level: 3,\n        parent: sectionNode.id,\n        children: []\n      }\n      nodes.push(itemNode)\n      sectionNode.children.push(itemNode.id)\n    })\n\n    // Subsection nodes (H3)\n    if (section.subsections) {\n      section.subsections.forEach(subsection => {\n        const subsectionNode = {\n          id: nodeId++,\n          text: subsection.title,\n          level: 3,\n          parent: sectionNode.id,\n          children: []\n        }\n        nodes.push(subsectionNode)\n        sectionNode.children.push(subsectionNode.id)\n\n        // Subsection items\n        subsection.items.forEach(item => {\n          const itemNode = {\n            id: nodeId++,\n            text: item,\n            level: 4,\n            parent: subsectionNode.id,\n            children: []\n          }\n          nodes.push(itemNode)\n          subsectionNode.children.push(itemNode.id)\n        })\n      })\n    }\n  })\n\n  return nodes\n}\n\nexport default { parseHeaders, parseList, parseMarkdown }\n","/**\n * Mind Map Generator Utility\n * Generates layout and positioning for mind map nodes\n */\n\nexport const calculateNodePositions = (nodes, config = {}) => {\n  const {\n    width = 800,\n    height = 600,\n    nodeSpacing = 150,\n    levelSpacing = 200,\n    centerX = width / 2,\n    centerY = height / 2\n  } = config\n\n  if (!nodes || nodes.length === 0) {\n    return []\n  }\n\n  const positionedNodes = [...nodes]\n  const rootNode = positionedNodes.find(node => node.level === 1)\n\n  if (!rootNode) {\n    return positionedNodes\n  }\n\n  // Position root node at center\n  rootNode.x = centerX\n  rootNode.y = centerY\n\n  // Group nodes by level\n  const nodesByLevel = {}\n  positionedNodes.forEach(node => {\n    if (!nodesByLevel[node.level]) {\n      nodesByLevel[node.level] = []\n    }\n    nodesByLevel[node.level].push(node)\n  })\n\n  // Position nodes level by level\n  const levels = Object.keys(nodesByLevel).map(Number).sort((a, b) => a - b)\n\n  for (let i = 1; i < levels.length; i++) {\n    const level = levels[i]\n    const levelNodes = nodesByLevel[level]\n\n    positionLevelNodes(levelNodes, level, rootNode, levelSpacing, nodeSpacing)\n  }\n\n  return positionedNodes\n}\n\nconst positionLevelNodes = (levelNodes, level, rootNode, levelSpacing, nodeSpacing) => {\n  const radius = level * levelSpacing\n  const angleStep = (2 * Math.PI) / levelNodes.length\n\n  levelNodes.forEach((node, index) => {\n    const angle = index * angleStep - Math.PI / 2 // Start from top\n    node.x = rootNode.x + radius * Math.cos(angle)\n    node.y = rootNode.y + radius * Math.sin(angle)\n  })\n}\n\nexport const generateConnections = (nodes) => {\n  const connections = []\n\n  nodes.forEach(node => {\n    if (node.parent) {\n      const parentNode = nodes.find(n => n.id === node.parent)\n      if (parentNode) {\n        connections.push({\n          id: `connection-${parentNode.id}-${node.id}`,\n          from: parentNode.id,\n          to: node.id,\n          fromX: parentNode.x || 0,\n          fromY: parentNode.y || 0,\n          toX: node.x || 0,\n          toY: node.y || 0\n        })\n      }\n    }\n  })\n\n  return connections\n}\n\nexport const generateLayout = (parsedData, containerWidth = 800, containerHeight = 600) => {\n  try {\n    const nodes = calculateNodePositions(parsedData.nodes, {\n      width: containerWidth,\n      height: containerHeight\n    })\n\n    const connections = generateConnections(nodes)\n\n    return {\n      nodes,\n      connections,\n      bounds: calculateBounds(nodes),\n      center: { x: containerWidth / 2, y: containerHeight / 2 }\n    }\n  } catch (error) {\n    console.error('Error generating layout:', error)\n    return {\n      nodes: [],\n      connections: [],\n      bounds: { minX: 0, minY: 0, maxX: containerWidth, maxY: containerHeight },\n      center: { x: containerWidth / 2, y: containerHeight / 2 }\n    }\n  }\n}\n\nconst calculateBounds = (nodes) => {\n  if (nodes.length === 0) {\n    return { minX: 0, minY: 0, maxX: 800, maxY: 600 }\n  }\n\n  const xs = nodes.map(node => node.x || 0)\n  const ys = nodes.map(node => node.y || 0)\n\n  return {\n    minX: Math.min(...xs) - 100,\n    minY: Math.min(...ys) - 100,\n    maxX: Math.max(...xs) + 100,\n    maxY: Math.max(...ys) + 100\n  }\n}\n\nexport default {\n  calculateNodePositions,\n  generateConnections,\n  generateLayout\n}\n","/**\n * Example Loader Utility\n * Handles loading and managing example markdown files\n */\n\nclass ExampleLoader {\n  constructor() {\n    this.examples = new Map()\n    this.loadExamples()\n  }\n\n  async loadExamples() {\n    // Load atomic design example using inline content\n    const atomicDesignContent = this.getInlineExample('atomic-design.md')\n    this.examples.set('atomic-design', {\n      id: 'atomic-design',\n      title: 'Atomic Design',\n      description: 'Sistema de design baseado em componentes',\n      content: atomicDesignContent,\n      category: 'design-systems'\n    })\n  }\n\n  async loadExampleFile(filename) {\n    try {\n      // In a real application, you might fetch from a server\n      // For now, we'll inline the content or use dynamic imports\n      const response = await fetch(`/src/examples/${filename}`)\n      if (!response.ok) {\n        throw new Error(`Failed to load example: ${response.status}`)\n      }\n      return await response.text()\n    } catch (error) {\n      // Fallback: return inline content if fetch fails\n      return this.getInlineExample(filename)\n    }\n  }\n\n  getInlineExample(filename) {\n    const examples = {\n      'atomic-design.md': `# Atomic Design\n\n## Conceitos Fundamentais\n### Metodologia de Design\n- Criada por Brad Frost\n- Inspirada na química\n- Hierarquia de componentes\n- Reutilização e consistência\n\n### Benefícios\n- Escalabilidade\n- Manutenibilidade\n- Consistência visual\n- Desenvolvimento eficiente\n- Documentação clara\n\n## Átomos (Atoms)\n### Elementos Básicos\n- Botões\n- Inputs\n- Labels\n- Icons\n- Tipografia\n\n### Características\n- Menor unidade funcional\n- Não podem ser decompostos\n- Altamente reutilizáveis\n- Propriedades básicas\n- Estados simples\n\n## Moléculas (Molecules)\n### Combinações Simples\n- Formulário de busca\n- Card de produto\n- Menu de navegação\n- Toolbar\n- Breadcrumb\n\n### Características\n- Agrupamento de átomos\n- Funcionalidade específica\n- Reutilizáveis em contextos\n- Interface mais complexa\n\n## Organismos (Organisms)\n### Seções Complexas\n- Header completo\n- Footer\n- Sidebar\n- Lista de produtos\n- Formulário completo\n\n### Características\n- Combinação de moléculas\n- Seções distintas da interface\n- Funcionalidade completa\n- Contexto específico\n\n## Templates\n### Estrutura de Página\n- Layout grid\n- Wireframes\n- Posicionamento\n- Hierarquia visual\n- Responsive design\n\n### Características\n- Esqueleto da página\n- Sem conteúdo real\n- Foco na estrutura\n- Guias de layout\n\n## Páginas (Pages)\n### Instâncias Reais\n- Homepage\n- Página de produto\n- Checkout\n- Dashboard\n- Perfil do usuário\n\n### Características\n- Template com conteúdo real\n- Casos de uso específicos\n- Testes de usabilidade\n- Validação do design`\n    }\n\n    return examples[filename] || '# Exemplo não encontrado\\n\\nO exemplo solicitado não pôde ser carregado.'\n  }\n\n  getExample(id) {\n    return this.examples.get(id)\n  }\n\n  getAllExamples() {\n    return Array.from(this.examples.values())\n  }\n\n  getExamplesByCategory(category) {\n    return this.getAllExamples().filter(example => example.category === category)\n  }\n\n  async loadExampleContent(id) {\n    const example = this.getExample(id)\n    if (!example) {\n      throw new Error(`Example with id \"${id}\" not found`)\n    }\n\n    return example.content\n  }\n\n  addExample(id, exampleData) {\n    this.examples.set(id, {\n      id,\n      title: exampleData.title,\n      description: exampleData.description,\n      content: exampleData.content,\n      category: exampleData.category || 'custom'\n    })\n  }\n\n  removeExample(id) {\n    return this.examples.delete(id)\n  }\n\n  hasExample(id) {\n    return this.examples.has(id)\n  }\n\n  getExampleMetadata(id) {\n    const example = this.getExample(id)\n    if (!example) return null\n\n    return {\n      id: example.id,\n      title: example.title,\n      description: example.description,\n      category: example.category\n    }\n  }\n}\n\n// Create singleton instance\nconst exampleLoader = new ExampleLoader()\n\nexport default exampleLoader\nexport { ExampleLoader }\n","/**\n * Mind Map SVG Renderer\n * Creates interactive SVG visualizations from markdown structure\n */\n\nclass MindMapRenderer {\n  constructor(container) {\n    this.container = container\n    this.svg = null\n    this.nodes = []\n    this.connections = []\n    this.zoom = 1\n    this.panX = 0\n    this.panY = 0\n    this.isDragging = false\n    this.lastMousePos = { x: 0, y: 0 }\n\n    // Configurações visuais\n    this.config = {\n      nodeWidth: 180,\n      nodeHeight: 60,\n      nodeSpacing: 300,\n      levelSpacing: 280, // Aumentado para mais espaçamento\n      itemSpacing: {\n        radial: 2.8, // Distância radial para itens normais (aumentado para mais espaço)\n        bullet: 3.2, // Distância específica para bullet points (aumentado para separar melhor)\n        vertical: 120, // Espaçamento vertical entre bullet points (aumentado)\n        horizontal: 500, // Distância horizontal da seção pai para bullets (aumentado)\n        minAngle: 0.5 // Ângulo mínimo entre itens radiais (aumentado para mais espaço)\n      },\n      layout: {\n        bulletThreshold: 2, // Número mínimo de bullets para usar layout vertical (reduzido)\n        collisionMargin: 30 // Margem de segurança para detecção de colisão (aumentado)\n      },\n      colors: {\n        primary: '#2563eb',\n        secondary: '#7c3aed',\n        accent: '#059669',\n        text: '#1f2937',\n        textLight: '#6b7280',\n        background: '#ffffff',\n        stroke: '#e5e7eb'\n      }\n    }\n  }\n\n  render(data) {\n    console.log('Rendering mind map with data:', data)\n\n    // Limpar container\n    this.container.innerHTML = ''\n\n    // Criar SVG\n    this.createSVG()\n\n    // Processar dados e criar layout\n    this.processData(data)\n\n    // Renderizar nós e conexões\n    this.renderNodes()\n    this.renderConnections()\n\n    // Configurar interatividade\n    this.setupInteractivity()\n\n    // Ajustar visualização inicial\n    this.fitToView()\n  }\n\n  createSVG() {\n    this.svg = document.createElementNS('http://www.w3.org/2000/svg', 'svg')\n    this.svg.setAttribute('width', '100%')\n    this.svg.setAttribute('height', '100%')\n    this.svg.setAttribute('viewBox', '0 0 1200 800')\n    this.svg.style.background = this.config.colors.background\n    this.svg.style.border = `1px solid ${this.config.colors.stroke}`\n    this.svg.style.borderRadius = '8px'\n\n    // Criar defs para gradientes e patterns\n    const defs = document.createElementNS('http://www.w3.org/2000/svg', 'defs')\n\n    // Gradiente para nó principal\n    const gradient = document.createElementNS('http://www.w3.org/2000/svg', 'linearGradient')\n    gradient.setAttribute('id', 'nodeGradient')\n    gradient.setAttribute('x1', '0%')\n    gradient.setAttribute('y1', '0%')\n    gradient.setAttribute('x2', '100%')\n    gradient.setAttribute('y2', '100%')\n\n    const stop1 = document.createElementNS('http://www.w3.org/2000/svg', 'stop')\n    stop1.setAttribute('offset', '0%')\n    stop1.setAttribute('stop-color', this.config.colors.primary)\n\n    const stop2 = document.createElementNS('http://www.w3.org/2000/svg', 'stop')\n    stop2.setAttribute('offset', '100%')\n    stop2.setAttribute('stop-color', this.config.colors.secondary)\n\n    gradient.appendChild(stop1)\n    gradient.appendChild(stop2)\n    defs.appendChild(gradient)\n\n    // Sombra\n    const filter = document.createElementNS('http://www.w3.org/2000/svg', 'filter')\n    filter.setAttribute('id', 'shadow')\n    filter.setAttribute('x', '-50%')\n    filter.setAttribute('y', '-50%')\n    filter.setAttribute('width', '200%')\n    filter.setAttribute('height', '200%')\n\n    const feDropShadow = document.createElementNS('http://www.w3.org/2000/svg', 'feDropShadow')\n    feDropShadow.setAttribute('dx', '2')\n    feDropShadow.setAttribute('dy', '2')\n    feDropShadow.setAttribute('stdDeviation', '3')\n    feDropShadow.setAttribute('flood-opacity', '0.2')\n\n    filter.appendChild(feDropShadow)\n    defs.appendChild(filter)\n\n    this.svg.appendChild(defs)\n\n    // Grupo principal para zoom/pan\n    this.mainGroup = document.createElementNS('http://www.w3.org/2000/svg', 'g')\n    this.mainGroup.setAttribute('id', 'main-group')\n    this.svg.appendChild(this.mainGroup)\n\n    this.container.appendChild(this.svg)\n  }\n\n  processData(data) {\n    this.nodes = []\n    this.connections = []\n\n    if (!data || !data.sections) {\n      return\n    }\n\n    // Nó central (título principal)\n    const centerX = 600\n    const centerY = 400\n\n    const rootNode = {\n      id: 'root',\n      text: data.title || 'Mapa Mental',\n      x: centerX,\n      y: centerY,\n      level: 0,\n      type: 'root',\n      width: this.config.nodeWidth * 1.2,\n      height: this.config.nodeHeight * 1.2\n    }\n    this.nodes.push(rootNode)\n\n    // Distribuir seções ao redor do centro\n    const angleStep = (2 * Math.PI) / data.sections.length\n    const radius = this.config.levelSpacing * 2\n\n    data.sections.forEach((section, index) => {\n      const angle = index * angleStep\n      const sectionX = centerX + Math.cos(angle) * radius\n      const sectionY = centerY + Math.sin(angle) * radius\n\n      const sectionNode = {\n        id: `section-${index}`,\n        text: section.title,\n        x: sectionX,\n        y: sectionY,\n        level: 1,\n        type: 'section',\n        width: this.config.nodeWidth,\n        height: this.config.nodeHeight,\n        parentId: 'root'\n      }\n      this.nodes.push(sectionNode)\n\n      // Conexão do centro para a seção\n      this.connections.push({\n        from: 'root',\n        to: `section-${index}`,\n        type: 'primary'\n      })\n\n      // Adicionar subsections e itens\n      const allItems = []\n\n      // Adicionar itens diretos da seção\n      if (section.items && section.items.length > 0) {\n        section.items.forEach(item => {\n          allItems.push({\n            text: item,\n            type: 'item',\n            parentId: `section-${index}`\n          })\n        })\n      }\n\n      // Adicionar subsections (###)\n      if (section.subsections && section.subsections.length > 0) {\n        section.subsections.forEach((subsection, subIndex) => {\n          allItems.push({\n            text: subsection.title,\n            type: 'subsection',\n            parentId: `section-${index}`,\n            subsectionIndex: subIndex,\n            items: subsection.items || []\n          })\n        })\n      }\n\n      // Distribuir todos os itens com hierarquia adequada\n      if (allItems.length > 0) {\n        // Separar bullet points de subsections para tratamento diferenciado\n        const bulletItems = allItems.filter(item => item.type === 'item')\n        const subsectionItems = allItems.filter(item => item.type === 'subsection')\n\n        // Primeiro, posicionar subsections como nível intermediário\n        if (subsectionItems.length > 0) {\n          this.layoutSubsectionsAsIntermediateLevel(subsectionItems, sectionX, sectionY, angle, index)\n        }\n\n        // Depois, posicionar bullet points diretos da seção\n        if (bulletItems.length > 0) {\n          const useVerticalForBullets = bulletItems.length >= this.config.layout.bulletThreshold\n\n          if (useVerticalForBullets) {\n            // Layout vertical para bullet points\n            this.layoutBulletsVertically(bulletItems, sectionX, sectionY, angle, index)\n          } else {\n            // Layout radial para poucos bullets\n            this.layoutItemsRadially(bulletItems, sectionX, sectionY, angle, index)\n          }\n        }\n      }\n    })\n  }\n\n  layoutBulletsVertically(bulletItems, sectionX, sectionY, sectionAngle, sectionIndex) {\n    const verticalSpacing = this.config.itemSpacing.vertical\n    const horizontalOffset = this.config.itemSpacing.horizontal\n\n    // Determinar lado da seção para colocar os bullets\n    const side = sectionAngle > Math.PI ? -1 : 1 // Esquerda ou direita baseado no ângulo\n    const startY = sectionY - ((bulletItems.length - 1) * verticalSpacing) / 2\n\n    bulletItems.forEach((item, itemIndex) => {\n      const itemX = sectionX + (horizontalOffset * side)\n      const itemY = startY + (itemIndex * verticalSpacing)\n\n      // Criar nó para bullet point\n      const itemNode = {\n        id: `item-${sectionIndex}-${itemIndex}`,\n        text: item.text,\n        x: itemX,\n        y: itemY,\n        level: 3,\n        type: 'item',\n        width: this.config.nodeWidth * 0.8,\n        height: this.config.nodeHeight * 0.8,\n        parentId: `section-${sectionIndex}`\n      }\n      this.nodes.push(itemNode)\n\n      // Conexão da seção para o item\n      this.connections.push({\n        from: `section-${sectionIndex}`,\n        to: `item-${sectionIndex}-${itemIndex}`,\n        type: 'secondary'\n      })\n    })\n  }\n\n  layoutItemsRadially(items, sectionX, sectionY, sectionAngle, sectionIndex) {\n    const itemRadius = this.config.levelSpacing * this.config.itemSpacing.radial\n    const totalAngleSpan = Math.PI * 1.4\n    const minAngleStep = this.config.itemSpacing.minAngle\n\n    // Garantir espaçamento mínimo entre itens\n    const idealAngleStep = totalAngleSpan / Math.max(items.length, 1)\n    const itemAngleStep = Math.max(idealAngleStep, minAngleStep)\n    const actualSpan = Math.min(totalAngleSpan, itemAngleStep * (items.length - 1))\n\n    const baseAngle = sectionAngle - (actualSpan / 2)\n\n    items.forEach((item, itemIndex) => {\n      const itemAngle = baseAngle + itemIndex * itemAngleStep\n      const itemX = sectionX + Math.cos(itemAngle) * itemRadius\n      const itemY = sectionY + Math.sin(itemAngle) * itemRadius\n\n      if (item.type === 'subsection') {\n        // Criar nó para subsection (###)\n        const subsectionNode = {\n          id: `subsection-${sectionIndex}-${item.subsectionIndex}`,\n          text: item.text,\n          x: itemX,\n          y: itemY,\n          level: 3,\n          type: 'subsection',\n          width: this.config.nodeWidth * 0.9,\n          height: this.config.nodeHeight * 0.9,\n          parentId: `section-${sectionIndex}`\n        }\n        this.nodes.push(subsectionNode)\n\n        // Conexão da seção para subsection\n        this.connections.push({\n          from: `section-${sectionIndex}`,\n          to: `subsection-${sectionIndex}-${item.subsectionIndex}`,\n          type: 'secondary'\n        })\n\n        // Adicionar itens da subsection\n        if (item.items && item.items.length > 0) {\n          const subItemRadius = this.config.levelSpacing * 1.0 // Aumentado de 0.75 para 1.0\n          const subItemAngleStep = (Math.PI * 1.2) / Math.max(item.items.length, 1) // Aumentado de 1.0 para 1.2\n          const subBaseAngle = itemAngle - (subItemAngleStep * (item.items.length - 1)) / 2\n\n          item.items.forEach((subItem, subItemIndex) => {\n            const subItemAngle = subBaseAngle + subItemIndex * subItemAngleStep\n            const subItemX = itemX + Math.cos(subItemAngle) * subItemRadius\n            const subItemY = itemY + Math.sin(subItemAngle) * subItemRadius\n\n            const subItemNode = {\n              id: `subitem-${sectionIndex}-${item.subsectionIndex}-${subItemIndex}`,\n              text: subItem,\n              x: subItemX,\n              y: subItemY,\n              level: 4,\n              type: 'subitem',\n              width: this.config.nodeWidth * 0.7,\n              height: this.config.nodeHeight * 0.7,\n              parentId: `subsection-${sectionIndex}-${item.subsectionIndex}`\n            }\n            this.nodes.push(subItemNode)\n\n            // Conexão da subsection para o subitem\n            this.connections.push({\n              from: `subsection-${sectionIndex}-${item.subsectionIndex}`,\n              to: `subitem-${sectionIndex}-${item.subsectionIndex}-${subItemIndex}`,\n              type: 'tertiary'\n            })\n          })\n        }\n      } else {\n        // Criar nó para item direto\n        const itemNode = {\n          id: `item-${sectionIndex}-${itemIndex}`,\n          text: item.text,\n          x: itemX,\n          y: itemY,\n          level: 3,\n          type: 'item',\n          width: this.config.nodeWidth * 0.8,\n          height: this.config.nodeHeight * 0.8,\n          parentId: `section-${sectionIndex}`\n        }\n        this.nodes.push(itemNode)\n\n        // Conexão da seção para o item\n        this.connections.push({\n          from: `section-${sectionIndex}`,\n          to: `item-${sectionIndex}-${itemIndex}`,\n          type: 'secondary'\n        })\n      }\n    })\n  }\n\n  processItemRadially(item, itemIndex, sectionX, sectionY, sectionAngle, sectionIndex, totalItems) {\n    // Função para processar itens no modo radial (quando há poucos bullets)\n    const itemRadius = this.config.levelSpacing * this.config.itemSpacing.radial\n    const totalAngleSpan = Math.PI * 1.4\n    const itemAngleStep = totalAngleSpan / Math.max(totalItems, 1)\n    const baseAngle = sectionAngle - (itemAngleStep * (totalItems - 1)) / 2\n\n    const itemAngle = baseAngle + itemIndex * itemAngleStep\n    const itemX = sectionX + Math.cos(itemAngle) * itemRadius\n    const itemY = sectionY + Math.sin(itemAngle) * itemRadius\n\n    // Criar nó para item direto (modo radial - poucos bullets)\n    const itemNode = {\n      id: `item-${sectionIndex}-${itemIndex}`,\n      text: item.text,\n      x: itemX,\n      y: itemY,\n      level: 3,\n      type: 'item',\n      width: this.config.nodeWidth * 0.8,\n      height: this.config.nodeHeight * 0.8,\n      parentId: `section-${sectionIndex}`\n    }\n    this.nodes.push(itemNode)\n\n    // Conexão da seção para o item\n    this.connections.push({\n      from: `section-${sectionIndex}`,\n      to: `item-${sectionIndex}-${itemIndex}`,\n      type: 'secondary'\n    })\n  }\n\n  renderNodes() {\n    this.nodes.forEach(node => {\n      const nodeGroup = document.createElementNS('http://www.w3.org/2000/svg', 'g')\n      nodeGroup.setAttribute('class', `mind-map-node mind-map-node--${node.type}`)\n      nodeGroup.setAttribute('data-node-id', node.id)\n\n      // Retângulo do nó\n      const rect = document.createElementNS('http://www.w3.org/2000/svg', 'rect')\n      rect.setAttribute('x', node.x - node.width / 2)\n      rect.setAttribute('y', node.y - node.height / 2)\n      rect.setAttribute('width', node.width)\n      rect.setAttribute('height', node.height)\n      rect.setAttribute('rx', node.type === 'root' ? '20' : '10')\n      rect.setAttribute('ry', node.type === 'root' ? '20' : '10')\n\n      if (node.type === 'root') {\n        rect.setAttribute('fill', 'url(#nodeGradient)')\n      } else if (node.type === 'section') {\n        rect.setAttribute('fill', this.config.colors.primary)\n      } else if (node.type === 'subsection') {\n        rect.setAttribute('fill', this.config.colors.secondary)\n      } else if (node.type === 'subitem') {\n        rect.setAttribute('fill', '#10b981') // Verde mais claro para subitems\n      } else {\n        rect.setAttribute('fill', this.config.colors.accent)\n      }\n\n      rect.setAttribute('stroke', this.config.colors.stroke)\n      rect.setAttribute('stroke-width', '2')\n      rect.setAttribute('filter', 'url(#shadow)')\n\n      nodeGroup.appendChild(rect)\n\n      // Texto do nó\n      const text = document.createElementNS('http://www.w3.org/2000/svg', 'text')\n      text.setAttribute('x', node.x)\n      text.setAttribute('y', node.y)\n      text.setAttribute('text-anchor', 'middle')\n      text.setAttribute('dominant-baseline', 'middle')\n      // Configurar cor do texto baseado no tipo\n      let textColor = '#ffffff'\n      if (node.type === 'item' || node.type === 'subitem') {\n        textColor = this.config.colors.text\n      }\n\n      text.setAttribute('fill', textColor)\n      text.setAttribute('font-family', 'var(--font-family)')\n\n      // Configurar peso da fonte\n      let fontWeight = 'normal'\n      if (node.type === 'root') fontWeight = 'bold'\n      else if (node.type === 'section') fontWeight = '600'\n      else if (node.type === 'subsection') fontWeight = '500'\n\n      text.setAttribute('font-weight', fontWeight)\n\n      // Configurar tamanho da fonte\n      let fontSize = '12'\n      if (node.type === 'root') fontSize = '16'\n      else if (node.type === 'section') fontSize = '14'\n      else if (node.type === 'subsection') fontSize = '13'\n      else if (node.type === 'item') fontSize = '12'\n      else if (node.type === 'subitem') fontSize = '11'\n\n      text.setAttribute('font-size', fontSize)\n\n      // Quebrar texto longo\n      const maxChars = node.type === 'root' ? 20 : node.type === 'section' ? 15 : 12\n      if (node.text.length > maxChars) {\n        const words = node.text.split(' ')\n        const lines = []\n        let currentLine = ''\n\n        words.forEach(word => {\n          if ((currentLine + word).length > maxChars && currentLine) {\n            lines.push(currentLine.trim())\n            currentLine = word + ' '\n          } else {\n            currentLine += word + ' '\n          }\n        })\n        if (currentLine) lines.push(currentLine.trim())\n\n        lines.forEach((line, i) => {\n          const tspan = document.createElementNS('http://www.w3.org/2000/svg', 'tspan')\n          tspan.setAttribute('x', node.x)\n          tspan.setAttribute('dy', i === 0 ? '0' : '1.2em')\n          tspan.textContent = line\n          text.appendChild(tspan)\n        })\n      } else {\n        text.textContent = node.text\n      }\n\n      nodeGroup.appendChild(text)\n\n      // Adicionar interatividade\n      nodeGroup.style.cursor = 'pointer'\n      nodeGroup.addEventListener('click', () => {\n        console.log('Node clicked:', node.text)\n        this.highlightNode(node.id)\n      })\n\n      this.mainGroup.appendChild(nodeGroup)\n    })\n  }\n\n  renderConnections() {\n    this.connections.forEach(connection => {\n      const fromNode = this.nodes.find(n => n.id === connection.from)\n      const toNode = this.nodes.find(n => n.id === connection.to)\n\n      if (!fromNode || !toNode) return\n\n      const line = document.createElementNS('http://www.w3.org/2000/svg', 'line')\n      line.setAttribute('x1', fromNode.x)\n      line.setAttribute('y1', fromNode.y)\n      line.setAttribute('x2', toNode.x)\n      line.setAttribute('y2', toNode.y)\n      line.setAttribute('stroke', connection.type === 'primary' ? this.config.colors.primary : this.config.colors.accent)\n      line.setAttribute('stroke-width', connection.type === 'primary' ? '3' : '2')\n      line.setAttribute('stroke-opacity', '0.6')\n      line.setAttribute('class', `mind-map-connection mind-map-connection--${connection.type}`)\n\n      // Inserir no início para ficar atrás dos nós\n      this.mainGroup.insertBefore(line, this.mainGroup.firstChild)\n    })\n  }\n\n  setupInteractivity() {\n    // Zoom com scroll\n    this.container.addEventListener('wheel', (e) => {\n      e.preventDefault()\n      const delta = e.deltaY > 0 ? 0.9 : 1.1\n      this.zoom = Math.max(0.1, Math.min(3, this.zoom * delta))\n      this.updateTransform()\n    })\n\n    // Pan com drag\n    this.container.addEventListener('mousedown', (e) => {\n      if (e.target === this.svg || e.target === this.container) {\n        this.isDragging = true\n        this.lastMousePos = { x: e.clientX, y: e.clientY }\n        this.container.style.cursor = 'grabbing'\n      }\n    })\n\n    this.container.addEventListener('mousemove', (e) => {\n      if (this.isDragging) {\n        const deltaX = e.clientX - this.lastMousePos.x\n        const deltaY = e.clientY - this.lastMousePos.y\n        this.panX += deltaX / this.zoom\n        this.panY += deltaY / this.zoom\n        this.lastMousePos = { x: e.clientX, y: e.clientY }\n        this.updateTransform()\n      }\n    })\n\n    this.container.addEventListener('mouseup', () => {\n      this.isDragging = false\n      this.container.style.cursor = 'default'\n    })\n\n    this.container.addEventListener('mouseleave', () => {\n      this.isDragging = false\n      this.container.style.cursor = 'default'\n    })\n  }\n\n  updateTransform() {\n    this.mainGroup.setAttribute('transform',\n      `translate(${this.panX}, ${this.panY}) scale(${this.zoom})`\n    )\n  }\n\n  highlightNode(nodeId) {\n    // Remover highlights anteriores\n    this.container.querySelectorAll('.mind-map-node').forEach(node => {\n      node.style.opacity = '1'\n    })\n\n    // Destacar nó selecionado\n    const selectedNode = this.container.querySelector(`[data-node-id=\"${nodeId}\"]`)\n    if (selectedNode) {\n      selectedNode.style.opacity = '0.8'\n\n      // Animar\n      selectedNode.style.transform = 'scale(1.05)'\n      setTimeout(() => {\n        selectedNode.style.transform = 'scale(1)'\n      }, 200)\n    }\n  }\n\n  fitToView() {\n    if (this.nodes.length === 0) return\n\n    // Calcular bounding box considerando o tamanho real dos nós\n    let minX = Infinity; let maxX = -Infinity\n    let minY = Infinity; let maxY = -Infinity\n\n    this.nodes.forEach(node => {\n      const halfWidth = (node.width || this.config.nodeWidth) / 2\n      const halfHeight = (node.height || this.config.nodeHeight) / 2\n\n      minX = Math.min(minX, node.x - halfWidth)\n      maxX = Math.max(maxX, node.x + halfWidth)\n      minY = Math.min(minY, node.y - halfHeight)\n      maxY = Math.max(maxY, node.y + halfHeight)\n    })\n\n    // Adicionar margem proporcional ao tamanho dos nós\n    const avgNodeWidth = this.config.nodeWidth\n    const avgNodeHeight = this.config.nodeHeight\n    const marginX = avgNodeWidth * 0.8 // Margem proporcional\n    const marginY = avgNodeHeight * 0.8\n\n    minX -= marginX\n    maxX += marginX\n    minY -= marginY\n    maxY += marginY\n\n    const width = maxX - minX\n    const height = maxY - minY\n    const centerX = (minX + maxX) / 2\n    const centerY = (minY + maxY) / 2\n\n    // Ajustar zoom para caber na tela com fator de redução menor\n    const containerRect = this.container.getBoundingClientRect()\n    const scaleX = containerRect.width / width\n    const scaleY = containerRect.height / height\n\n    // Usar 0.95 ao invés de 0.8 e garantir zoom mínimo de 0.3\n    this.zoom = Math.max(0.3, Math.min(scaleX, scaleY, 2) * 0.95)\n\n    // Centralizar\n    this.panX = (containerRect.width / 2) - centerX * this.zoom\n    this.panY = (containerRect.height / 2) - centerY * this.zoom\n\n    this.updateTransform()\n  }\n\n  // Métodos públicos para controles\n  zoomIn() {\n    this.zoom = Math.min(3, this.zoom * 1.2)\n    this.updateTransform()\n  }\n\n  zoomOut() {\n    this.zoom = Math.max(0.2, this.zoom * 0.8) // Aumentado de 0.1 para 0.2\n    this.updateTransform()\n  }\n\n  resetView() {\n    this.fitToView()\n  }\n\n  layoutSubsectionsAsIntermediateLevel(subsectionItems, sectionX, sectionY, sectionAngle, sectionIndex) {\n    // Posicionar subsections como um nível intermediário entre seção e bullets\n    const intermediateRadius = this.config.levelSpacing * 1.2 // Distância intermediária\n    const subsectionAngleStep = (Math.PI * 0.8) / Math.max(1, subsectionItems.length - 1) // Arco de 144 graus\n    const startAngle = sectionAngle - (Math.PI * 0.4) // Começar 72 graus antes\n\n    subsectionItems.forEach((subsection, subIndex) => {\n      const subsectionAngle = startAngle + (subIndex * subsectionAngleStep)\n      const subsectionX = sectionX + Math.cos(subsectionAngle) * intermediateRadius\n      const subsectionY = sectionY + Math.sin(subsectionAngle) * intermediateRadius\n\n      const subsectionNode = {\n        id: `subsection-${sectionIndex}-${subIndex}`,\n        text: subsection.text,\n        x: subsectionX,\n        y: subsectionY,\n        level: 2,\n        type: 'subsection',\n        width: this.config.nodeWidth * 0.9, // Slightly smaller than sections\n        height: this.config.nodeHeight * 0.8,\n        parentId: `section-${sectionIndex}`\n      }\n      this.nodes.push(subsectionNode)\n\n      // Conexão da seção para a subsection\n      this.connections.push({\n        from: `section-${sectionIndex}`,\n        to: `subsection-${sectionIndex}-${subIndex}`,\n        type: 'secondary'\n      })\n\n      // Agora posicionar os bullet points desta subsection\n      if (subsection.items && subsection.items.length > 0) {\n        const bulletRadius = this.config.levelSpacing * 0.8 // Distância menor para bullets\n        const bulletAngleStep = (Math.PI * 0.6) / Math.max(1, subsection.items.length - 1)\n        const bulletStartAngle = subsectionAngle - (Math.PI * 0.3)\n\n        subsection.items.forEach((bulletText, bulletIndex) => {\n          const bulletAngle = bulletStartAngle + (bulletIndex * bulletAngleStep)\n          const bulletX = subsectionX + Math.cos(bulletAngle) * bulletRadius\n          const bulletY = subsectionY + Math.sin(bulletAngle) * bulletRadius\n\n          const bulletNode = {\n            id: `bullet-${sectionIndex}-${subIndex}-${bulletIndex}`,\n            text: bulletText,\n            x: bulletX,\n            y: bulletY,\n            level: 3,\n            type: 'subitem',\n            width: this.config.nodeWidth * 0.8,\n            height: this.config.nodeHeight * 0.7,\n            parentId: `subsection-${sectionIndex}-${subIndex}`\n          }\n          this.nodes.push(bulletNode)\n\n          // Conexão da subsection para o bullet\n          this.connections.push({\n            from: `subsection-${sectionIndex}-${subIndex}`,\n            to: `bullet-${sectionIndex}-${subIndex}-${bulletIndex}`,\n            type: 'tertiary'\n          })\n        })\n      }\n    })\n  }\n}\n\nexport default MindMapRenderer\n","/**\n * Export Utilities\n * Handles exporting mind maps in various formats\n */\n\nclass ExportUtils {\n  constructor() {\n    this.supportedFormats = ['png', 'svg', 'pdf']\n  }\n\n  /**\n   * Export the mind map as an image\n   * @param {SVGElement} svgElement - The SVG element to export\n   * @param {Object} options - Export options\n   */\n  async exportAsPNG(svgElement, options = {}) {\n    const {\n      width = 1200,\n      height = 800,\n      scale = 2,\n      filename = 'mind-map.png',\n      backgroundColor = '#ffffff'\n    } = options\n\n    try {\n      // Create a canvas element\n      const canvas = document.createElement('canvas')\n      const ctx = canvas.getContext('2d')\n\n      // Set canvas dimensions\n      canvas.width = width * scale\n      canvas.height = height * scale\n\n      // Set white background\n      ctx.fillStyle = backgroundColor\n      ctx.fillRect(0, 0, canvas.width, canvas.height)\n\n      // Get SVG data\n      const svgData = this.getSVGData(svgElement, width, height)\n\n      // Convert SVG to image\n      const img = new Image()\n\n      return new Promise((resolve, reject) => {\n        img.onload = () => {\n          // Scale the context for high DPI\n          ctx.scale(scale, scale)\n\n          // Draw the image\n          ctx.drawImage(img, 0, 0, width, height)\n\n          // Convert canvas to blob\n          canvas.toBlob((blob) => {\n            if (blob) {\n              this.downloadBlob(blob, filename)\n              resolve(blob)\n            } else {\n              reject(new Error('Failed to create image blob'))\n            }\n          }, 'image/png', 1.0)\n        }\n\n        img.onerror = () => {\n          reject(new Error('Failed to load SVG as image'))\n        }\n\n        // Set the SVG data as image source\n        img.src = 'data:image/svg+xml;base64,' + btoa(svgData)\n      })\n    } catch (error) {\n      console.error('Error exporting as PNG:', error)\n      throw error\n    }\n  }\n\n  /**\n   * Export the mind map as SVG\n   * @param {SVGElement} svgElement - The SVG element to export\n   * @param {Object} options - Export options\n   */\n  async exportAsSVG(svgElement, options = {}) {\n    const {\n      filename = 'mind-map.svg',\n      width = 1200,\n      height = 800\n    } = options\n\n    try {\n      const svgData = this.getSVGData(svgElement, width, height)\n      const blob = new Blob([svgData], { type: 'image/svg+xml;charset=utf-8' })\n\n      this.downloadBlob(blob, filename)\n      return blob\n    } catch (error) {\n      console.error('Error exporting as SVG:', error)\n      throw error\n    }\n  }\n\n  /**\n   * Get SVG data as string\n   * @param {SVGElement} svgElement - The SVG element\n   * @param {number} width - Target width\n   * @param {number} height - Target height\n   */\n  getSVGData(svgElement, width, height) {\n    // Clone the SVG element\n    const svgClone = svgElement.cloneNode(true)\n\n    // Set explicit dimensions\n    svgClone.setAttribute('width', width)\n    svgClone.setAttribute('height', height)\n    svgClone.setAttribute('xmlns', 'http://www.w3.org/2000/svg')\n\n    // Add any necessary styles inline\n    this.inlineStyles(svgClone)\n\n    // Get the outer HTML\n    const serializer = new XMLSerializer()\n    return serializer.serializeToString(svgClone)\n  }\n\n  /**\n   * Inline styles for better export compatibility\n   * @param {SVGElement} svgElement - The SVG element\n   */\n  inlineStyles(svgElement) {\n    // Get computed styles and apply them inline\n    const elements = svgElement.querySelectorAll('*')\n\n    elements.forEach(element => {\n      const computedStyle = window.getComputedStyle(element)\n\n      // List of important style properties to inline\n      const importantStyles = [\n        'font-family',\n        'font-size',\n        'font-weight',\n        'fill',\n        'stroke',\n        'stroke-width',\n        'opacity',\n        'visibility'\n      ]\n\n      importantStyles.forEach(prop => {\n        const value = computedStyle.getPropertyValue(prop)\n        if (value && value !== 'initial' && value !== 'inherit') {\n          element.style.setProperty(prop, value)\n        }\n      })\n    })\n  }\n\n  /**\n   * Download a blob as a file\n   * @param {Blob} blob - The blob to download\n   * @param {string} filename - The filename\n   */\n  downloadBlob(blob, filename) {\n    const url = URL.createObjectURL(blob)\n    const link = document.createElement('a')\n\n    link.href = url\n    link.download = filename\n    link.style.display = 'none'\n\n    document.body.appendChild(link)\n    link.click()\n    document.body.removeChild(link)\n\n    // Clean up the URL object\n    URL.revokeObjectURL(url)\n  }\n\n  /**\n   * Show export modal with format options\n   * @param {SVGElement} svgElement - The SVG element to export\n   */\n  showExportModal(svgElement) {\n    if (!svgElement) {\n      throw new Error('No SVG element provided for export')\n    }\n\n    // Create modal HTML\n    const modalHTML = `\n      <div id=\"export-modal\" class=\"molecule-modal\" aria-hidden=\"false\" role=\"dialog\" aria-labelledby=\"export-modal-title\">\n        <div class=\"molecule-modal__backdrop\"></div>\n        <div class=\"molecule-modal__content\">\n          <header class=\"molecule-modal__header\">\n            <h3 id=\"export-modal-title\">Export Mind Map</h3>\n            <button class=\"atom-button atom-button--ghost\" id=\"export-modal-close\" aria-label=\"Close export\">✕</button>\n          </header>\n          <div class=\"molecule-modal__body\">\n            <div class=\"export-options\">\n              <div class=\"export-format-group\">\n                <label class=\"export-format-option\">\n                  <input type=\"radio\" name=\"export-format\" value=\"png\" checked>\n                  <span class=\"export-format-icon\">🖼️</span>\n                  <div class=\"export-format-info\">\n                    <span class=\"export-format-title\">PNG Image</span>\n                    <span class=\"export-format-description\">High quality image, best for sharing</span>\n                  </div>\n                </label>\n                <label class=\"export-format-option\">\n                  <input type=\"radio\" name=\"export-format\" value=\"svg\">\n                  <span class=\"export-format-icon\">🎨</span>\n                  <div class=\"export-format-info\">\n                    <span class=\"export-format-title\">SVG Vector</span>\n                    <span class=\"export-format-description\">Scalable vector format</span>\n                  </div>\n                </label>\n              </div>\n              <div class=\"export-actions\">\n                <button class=\"atom-button atom-button--ghost\" id=\"export-cancel\">Cancel</button>\n                <button class=\"atom-button atom-button--secondary\" id=\"export-confirm\">Export</button>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    `\n\n    // Add modal to document\n    document.body.insertAdjacentHTML('beforeend', modalHTML)\n    const modal = document.getElementById('export-modal')\n\n    // Set up event listeners\n    this.setupExportModalListeners(modal, svgElement)\n  }\n\n  /**\n   * Set up export modal event listeners\n   * @param {HTMLElement} modal - The modal element\n   * @param {SVGElement} svgElement - The SVG element\n   */\n  setupExportModalListeners(modal, svgElement) {\n    const closeButton = modal.querySelector('#export-modal-close')\n    const cancelButton = modal.querySelector('#export-cancel')\n    const confirmButton = modal.querySelector('#export-confirm')\n    const backdrop = modal.querySelector('.molecule-modal__backdrop')\n\n    const closeModal = () => {\n      modal.remove()\n    }\n\n    const handleExport = async () => {\n      const selectedFormat = modal.querySelector('input[name=\"export-format\"]:checked').value\n      const timestamp = new Date().toISOString().split('T')[0]\n\n      try {\n        confirmButton.textContent = 'Exporting...'\n        confirmButton.disabled = true\n\n        if (selectedFormat === 'png') {\n          await this.exportAsPNG(svgElement, {\n            filename: `mind-map-${timestamp}.png`,\n            width: 1200,\n            height: 800,\n            scale: 2\n          })\n        } else if (selectedFormat === 'svg') {\n          await this.exportAsSVG(svgElement, {\n            filename: `mind-map-${timestamp}.svg`,\n            width: 1200,\n            height: 800\n          })\n        }\n\n        closeModal()\n      } catch (error) {\n        console.error('Export failed:', error)\n        alert('Export failed: ' + error.message)\n        confirmButton.textContent = 'Export'\n        confirmButton.disabled = false\n      }\n    }\n\n    // Event listeners\n    closeButton.addEventListener('click', closeModal)\n    cancelButton.addEventListener('click', closeModal)\n    confirmButton.addEventListener('click', handleExport)\n    backdrop.addEventListener('click', closeModal)\n\n    // ESC key to close\n    document.addEventListener('keydown', function escapeHandler(e) {\n      if (e.key === 'Escape') {\n        closeModal()\n        document.removeEventListener('keydown', escapeHandler)\n      }\n    })\n  }\n}\n\n// Create singleton instance\nconst exportUtils = new ExportUtils()\n\nexport default exportUtils\nexport { ExportUtils }\n","/**\n * Button Atom Component\n * Basic interactive button element following atomic design principles\n */\n\nclass Button {\n  constructor(text, onClick, variant = 'primary', disabled = false) {\n    this.text = text\n    this.onClick = onClick\n    this.variant = variant\n    this.disabled = disabled\n    this.element = null\n  }\n\n  render() {\n    if (this.element) {\n      return this.element\n    }\n\n    this.element = document.createElement('button')\n    this.element.className = this.getClassName()\n    this.element.textContent = this.text\n    this.element.disabled = this.disabled\n\n    // Debug: ensure button is clickable\n    this.element.style.position = 'relative'\n    this.element.style.zIndex = '10'\n    this.element.style.pointerEvents = 'auto'\n\n    if (!this.disabled && this.onClick) {\n      console.log('Adding click listener to button:', this.text)\n      this.element.addEventListener('click', (event) => {\n        console.log('Button clicked:', this.text)\n        this.onClick(event)\n      })\n      this.element.addEventListener('keydown', this.handleKeyDown.bind(this))\n    } else {\n      console.log('Button created without click handler:', this.text, 'disabled:', this.disabled, 'onClick:', !!this.onClick)\n    }\n\n    return this.element\n  }\n\n  getClassName() {\n    const baseClass = 'atom-button'\n    const variantClass = `atom-button--${this.variant}`\n    const disabledClass = this.disabled ? 'atom-button--disabled' : ''\n\n    return [baseClass, variantClass, disabledClass]\n      .filter(Boolean)\n      .join(' ')\n  }\n\n  handleKeyDown(event) {\n    if (event.key === 'Enter' || event.key === ' ') {\n      event.preventDefault()\n      if (this.onClick) {\n        this.onClick(event)\n      }\n    }\n  }\n\n  setText(newText) {\n    this.text = newText\n    if (this.element) {\n      this.element.textContent = newText\n    }\n  }\n\n  setDisabled(disabled) {\n    this.disabled = disabled\n    if (this.element) {\n      this.element.disabled = disabled\n      this.element.className = this.getClassName()\n    }\n  }\n\n  setVariant(variant) {\n    this.variant = variant\n    if (this.element) {\n      this.element.className = this.getClassName()\n    }\n  }\n\n  destroy() {\n    if (this.element && this.element.parentNode) {\n      this.element.removeEventListener('click', this.onClick)\n      this.element.removeEventListener('keydown', this.handleKeyDown)\n      this.element.parentNode.removeChild(this.element)\n    }\n    this.element = null\n  }\n}\n\nexport default Button\n","/**\n * Language Selector Atom Component\n * Dropdown selector for changing application language\n */\n\nimport languageManager from '../../i18n/LanguageManager.js'\n\nclass LanguageSelector {\n  constructor(options = {}) {\n    this.onLanguageChange = options.onLanguageChange || null\n    this.compact = options.compact || false\n    this.showFlags = options.showFlags !== false\n\n    this.element = null\n    this.selectElement = null\n    this.currentLanguage = languageManager.getCurrentLanguage()\n\n    this.unsubscribe = languageManager.subscribe(this.handleLanguageChange.bind(this))\n  }\n\n  render() {\n    if (this.element) {\n      return this.element\n    }\n\n    this.element = document.createElement('div')\n    this.element.className = this.getClassName()\n\n    if (!this.compact) {\n      const label = document.createElement('label')\n      label.className = 'atom-language-selector__label'\n      label.textContent = languageManager.t('buttons.language')\n      label.setAttribute('for', 'language-selector')\n      this.element.appendChild(label)\n    }\n\n    this.selectElement = document.createElement('select')\n    this.selectElement.className = 'atom-language-selector__select'\n    this.selectElement.id = 'language-selector'\n    this.selectElement.setAttribute('aria-label', languageManager.t('buttons.language'))\n\n    this.populateOptions()\n\n    this.selectElement.addEventListener('change', this.handleSelectionChange.bind(this))\n\n    this.element.appendChild(this.selectElement)\n\n    return this.element\n  }\n\n  populateOptions() {\n    if (!this.selectElement) return\n\n    this.selectElement.innerHTML = ''\n\n    const availableLanguages = languageManager.getAvailableLanguages()\n\n    availableLanguages.forEach(lang => {\n      const option = document.createElement('option')\n      option.value = lang.code\n      option.textContent = this.formatLanguageName(lang)\n      option.selected = lang.code === this.currentLanguage\n\n      this.selectElement.appendChild(option)\n    })\n  }\n\n  formatLanguageName(language) {\n    if (this.compact) {\n      return language.code.toUpperCase()\n    }\n\n    const flag = this.getLanguageFlag(language.code)\n    const name = language.nativeName || language.name\n\n    return this.showFlags ? `${flag} ${name}` : name\n  }\n\n  getLanguageFlag(langCode) {\n    const flags = {\n      pt: '',\n      en: '',\n      es: ''\n    }\n\n    return flags[langCode] || ''\n  }\n\n  getClassName() {\n    const baseClass = 'atom-language-selector'\n    const compactClass = this.compact ? 'atom-language-selector--compact' : ''\n\n    return [baseClass, compactClass]\n      .filter(Boolean)\n      .join(' ')\n  }\n\n  handleSelectionChange(event) {\n    const selectedLanguage = event.target.value\n\n    if (selectedLanguage !== this.currentLanguage) {\n      languageManager.setLanguage(selectedLanguage)\n\n      if (this.onLanguageChange) {\n        this.onLanguageChange(selectedLanguage, this.currentLanguage)\n      }\n    }\n  }\n\n  handleLanguageChange(newLanguage, previousLanguage) {\n    this.currentLanguage = newLanguage\n\n    if (this.selectElement) {\n      this.selectElement.value = newLanguage\n\n      this.populateOptions()\n    }\n\n    if (!this.compact) {\n      const label = this.element?.querySelector('.atom-language-selector__label')\n      if (label) {\n        label.textContent = languageManager.t('buttons.language')\n      }\n    }\n  }\n\n  setCompact(compact) {\n    this.compact = compact\n    if (this.element) {\n      this.element.className = this.getClassName()\n      this.populateOptions()\n    }\n  }\n\n  setShowFlags(showFlags) {\n    this.showFlags = showFlags\n    if (this.selectElement) {\n      this.populateOptions()\n    }\n  }\n\n  getCurrentLanguage() {\n    return this.currentLanguage\n  }\n\n  focus() {\n    if (this.selectElement) {\n      this.selectElement.focus()\n    }\n  }\n\n  destroy() {\n    if (this.unsubscribe) {\n      this.unsubscribe()\n    }\n\n    if (this.selectElement) {\n      this.selectElement.removeEventListener('change', this.handleSelectionChange)\n    }\n\n    if (this.element && this.element.parentNode) {\n      this.element.parentNode.removeChild(this.element)\n    }\n\n    this.element = null\n    this.selectElement = null\n  }\n}\n\nexport default LanguageSelector\n","/**\n * Toolbar Molecule Component\n * Container for action buttons with different layouts\n */\n\nimport Button from '../../atoms/Button/index.js'\nimport LanguageSelector from '../../atoms/LanguageSelector/index.js'\nimport languageManager from '../../i18n/LanguageManager.js'\n\nclass Toolbar {\n  constructor(options = {}) {\n    this.variant = options.variant || 'default' // default, compact, mobile\n    this.actions = options.actions || []\n    this.showLanguageSelector = options.showLanguageSelector !== false\n    this.orientation = options.orientation || 'horizontal' // horizontal, vertical\n\n    this.element = null\n    this.buttons = new Map()\n    this.languageSelector = null\n\n    // Subscribe to language changes for button text updates\n    this.unsubscribe = languageManager.subscribe(this.updateButtonTexts.bind(this))\n  }\n\n  render() {\n    if (this.element) {\n      return this.element\n    }\n\n    this.element = document.createElement('div')\n    this.element.className = this.getClassName()\n    this.element.setAttribute('role', 'toolbar')\n    this.element.setAttribute('aria-label', languageManager.t('accessibility.toolbar'))\n\n    // Create buttons\n    this.createButtons()\n\n    // Add language selector if enabled\n    if (this.showLanguageSelector) {\n      this.createLanguageSelector()\n    }\n\n    return this.element\n  }\n\n  createButtons() {\n    this.actions.forEach((action, index) => {\n      const button = new Button(\n        this.getButtonText(action.key),\n        action.onClick,\n        action.variant || 'secondary',\n        action.disabled || false\n      )\n\n      const buttonElement = button.render()\n\n      // Add additional attributes\n      if (action.ariaLabel) {\n        buttonElement.setAttribute('aria-label', languageManager.t(action.ariaLabel))\n      }\n\n      if (action.title) {\n        buttonElement.setAttribute('title', languageManager.t(action.title))\n      }\n\n      if (action.icon) {\n        buttonElement.innerHTML = `${action.icon} ${buttonElement.textContent}`\n        buttonElement.classList.add('atom-button--with-icon')\n      }\n\n      this.buttons.set(action.key, button)\n      this.element.appendChild(buttonElement)\n\n      // Add separator if specified\n      if (action.separator && index < this.actions.length - 1) {\n        this.addSeparator()\n      }\n    })\n  }\n\n  createLanguageSelector() {\n    const separator = this.addSeparator()\n\n    this.languageSelector = new LanguageSelector({\n      compact: this.variant === 'compact' || this.variant === 'mobile',\n      showFlags: this.variant !== 'compact',\n      onLanguageChange: this.handleLanguageChange.bind(this)\n    })\n\n    const selectorElement = this.languageSelector.render()\n    this.element.appendChild(selectorElement)\n  }\n\n  addSeparator() {\n    const separator = document.createElement('div')\n    separator.className = 'molecule-toolbar__separator'\n    separator.setAttribute('role', 'separator')\n    this.element.appendChild(separator)\n    return separator\n  }\n\n  getButtonText(key) {\n    // Map action keys to translation keys\n    const textMap = {\n      theme: 'buttons.theme',\n      export: 'buttons.export',\n      help: 'buttons.help',\n      clear: 'buttons.clear',\n      example: 'buttons.example',\n      'zoom-in': 'buttons.zoomIn',\n      'zoom-out': 'buttons.zoomOut',\n      'fit-screen': 'buttons.fitScreen',\n      save: 'buttons.save',\n      settings: 'buttons.settings'\n    }\n\n    return languageManager.t(textMap[key] || `buttons.${key}`)\n  }\n\n  getClassName() {\n    const baseClass = 'molecule-toolbar'\n    const variantClass = `molecule-toolbar--${this.variant}`\n    const orientationClass = `molecule-toolbar--${this.orientation}`\n\n    return [baseClass, variantClass, orientationClass]\n      .filter(Boolean)\n      .join(' ')\n  }\n\n  updateButtonTexts() {\n    // Update button texts when language changes\n    this.buttons.forEach((button, key) => {\n      const newText = this.getButtonText(key)\n      button.setText(newText)\n    })\n\n    // Update aria-label for toolbar\n    if (this.element) {\n      this.element.setAttribute('aria-label', languageManager.t('accessibility.toolbar'))\n    }\n  }\n\n  handleLanguageChange(newLanguage, previousLanguage) {\n    // Optional callback for language changes\n    console.log(`Language changed from ${previousLanguage} to ${newLanguage}`)\n  }\n\n  // Action management\n  addAction(action) {\n    this.actions.push(action)\n\n    if (this.element) {\n      // Re-render if already rendered\n      this.element.innerHTML = ''\n      this.buttons.clear()\n      this.createButtons()\n\n      if (this.showLanguageSelector) {\n        this.createLanguageSelector()\n      }\n    }\n  }\n\n  removeAction(key) {\n    const index = this.actions.findIndex(action => action.key === key)\n    if (index > -1) {\n      this.actions.splice(index, 1)\n\n      // Remove button\n      const button = this.buttons.get(key)\n      if (button) {\n        button.destroy()\n        this.buttons.delete(key)\n      }\n\n      // Re-render if needed\n      if (this.element) {\n        this.element.innerHTML = ''\n        this.createButtons()\n\n        if (this.showLanguageSelector) {\n          this.createLanguageSelector()\n        }\n      }\n    }\n  }\n\n  updateAction(key, updates) {\n    const action = this.actions.find(a => a.key === key)\n    if (action) {\n      Object.assign(action, updates)\n\n      const button = this.buttons.get(key)\n      if (button) {\n        if (updates.text) {\n          button.setText(this.getButtonText(key))\n        }\n        if (updates.disabled !== undefined) {\n          button.setDisabled(updates.disabled)\n        }\n        if (updates.variant) {\n          button.setVariant(updates.variant)\n        }\n      }\n    }\n  }\n\n  // State management\n  enableAction(key) {\n    this.updateAction(key, { disabled: false })\n  }\n\n  disableAction(key) {\n    this.updateAction(key, { disabled: true })\n  }\n\n  showAction(key) {\n    const button = this.buttons.get(key)\n    if (button && button.element) {\n      button.element.style.display = ''\n    }\n  }\n\n  hideAction(key) {\n    const button = this.buttons.get(key)\n    if (button && button.element) {\n      button.element.style.display = 'none'\n    }\n  }\n\n  // Variant management\n  setVariant(variant) {\n    this.variant = variant\n    if (this.element) {\n      this.element.className = this.getClassName()\n\n      // Update language selector if present\n      if (this.languageSelector) {\n        const isCompact = variant === 'compact' || variant === 'mobile'\n        this.languageSelector.setCompact(isCompact)\n        this.languageSelector.setShowFlags(variant !== 'compact')\n      }\n    }\n  }\n\n  setOrientation(orientation) {\n    this.orientation = orientation\n    if (this.element) {\n      this.element.className = this.getClassName()\n    }\n  }\n\n  // Accessibility\n  focus() {\n    // Focus first button\n    const firstButton = this.element?.querySelector('.atom-button')\n    if (firstButton) {\n      firstButton.focus()\n    }\n  }\n\n  // Keyboard navigation\n  setupKeyboardNavigation() {\n    if (!this.element) return\n\n    this.element.addEventListener('keydown', (event) => {\n      const buttons = Array.from(this.element.querySelectorAll('.atom-button:not([disabled])'))\n      const currentIndex = buttons.findIndex(btn => btn === document.activeElement)\n\n      let newIndex = currentIndex\n\n      switch (event.key) {\n      case 'ArrowRight':\n      case 'ArrowDown':\n        newIndex = (currentIndex + 1) % buttons.length\n        break\n      case 'ArrowLeft':\n      case 'ArrowUp':\n        newIndex = currentIndex > 0 ? currentIndex - 1 : buttons.length - 1\n        break\n      case 'Home':\n        newIndex = 0\n        break\n      case 'End':\n        newIndex = buttons.length - 1\n        break\n      default:\n        return\n      }\n\n      event.preventDefault()\n      buttons[newIndex]?.focus()\n    })\n  }\n\n  destroy() {\n    // Unsubscribe from language changes\n    if (this.unsubscribe) {\n      this.unsubscribe()\n    }\n\n    // Destroy all buttons\n    this.buttons.forEach(button => button.destroy())\n    this.buttons.clear()\n\n    // Destroy language selector\n    if (this.languageSelector) {\n      this.languageSelector.destroy()\n    }\n\n    // Remove element\n    if (this.element && this.element.parentNode) {\n      this.element.parentNode.removeChild(this.element)\n    }\n\n    this.element = null\n  }\n}\n\nexport default Toolbar\n","/**\n * Header Organism Component\n * Main application header with title and navigation\n */\n\nimport Toolbar from '../../molecules/Toolbar/index.js'\nimport languageManager from '../../i18n/LanguageManager.js'\nimport themeManager from '../../theme/ThemeManager.js'\n\nclass Header {\n  constructor(options = {}) {\n    this.title = options.title || languageManager.t('header.title')\n    this.subtitle = options.subtitle || languageManager.t('header.subtitle')\n    this.showToolbar = options.showToolbar !== false\n    this.onThemeToggle = options.onThemeToggle || null\n    this.onExport = options.onExport || null\n    this.onExample = options.onExample || null\n    this.onHelp = options.onHelp || null\n\n    this.element = null\n    this.titleElement = null\n    this.subtitleElement = null\n    this.toolbar = null\n\n    // Subscribe to language changes\n    this.unsubscribe = languageManager.subscribe(this.updateLabels.bind(this))\n  }\n\n  render() {\n    if (this.element) {\n      return this.element\n    }\n\n    this.element = document.createElement('header')\n    this.element.className = 'organism-header'\n    this.element.setAttribute('role', 'banner')\n\n    // Create header container\n    const container = document.createElement('div')\n    container.className = 'organism-header__container'\n\n    // Create title section\n    this.createTitleSection(container)\n\n    // Create toolbar if enabled\n    if (this.showToolbar) {\n      this.createToolbar(container)\n    }\n\n    this.element.appendChild(container)\n\n    return this.element\n  }\n\n  createTitleSection(container) {\n    const titleSection = document.createElement('div')\n    titleSection.className = 'organism-header__title-section'\n\n    // Main title\n    this.titleElement = document.createElement('h1')\n    this.titleElement.className = 'organism-header__title'\n    this.titleElement.textContent = this.title\n    titleSection.appendChild(this.titleElement)\n\n    // Subtitle (if provided)\n    if (this.subtitle) {\n      this.subtitleElement = document.createElement('p')\n      this.subtitleElement.className = 'organism-header__subtitle'\n      this.subtitleElement.textContent = this.subtitle\n      titleSection.appendChild(this.subtitleElement)\n    }\n\n    container.appendChild(titleSection)\n  }\n\n  createToolbar(container) {\n    const actions = [\n      {\n        key: 'theme',\n        variant: 'secondary',\n        onClick: this.handleThemeToggle.bind(this),\n        ariaLabel: 'buttons.theme',\n        title: 'buttons.theme'\n      },\n      {\n        key: 'example',\n        variant: 'secondary',\n        onClick: this.handleExample.bind(this),\n        ariaLabel: 'buttons.example',\n        title: 'buttons.example'\n      },\n      {\n        key: 'export',\n        variant: 'secondary',\n        onClick: this.handleExport.bind(this),\n        ariaLabel: 'buttons.export',\n        title: 'buttons.export'\n      },\n      {\n        key: 'help',\n        variant: 'secondary',\n        onClick: this.handleHelp.bind(this),\n        ariaLabel: 'buttons.help',\n        title: 'buttons.help'\n      }\n    ]\n\n    this.toolbar = new Toolbar({\n      variant: 'compact',\n      actions,\n      showLanguageSelector: true,\n      orientation: 'horizontal'\n    })\n\n    const toolbarElement = this.toolbar.render()\n    toolbarElement.classList.add('organism-header__toolbar')\n\n    container.appendChild(toolbarElement)\n  }\n\n  handleThemeToggle() {\n    console.log('Theme toggle clicked!')\n    if (this.onThemeToggle) {\n      this.onThemeToggle()\n    } else {\n      // Default behavior: cycle through themes\n      themeManager.cycleTheme()\n    }\n  }\n\n  handleExample() {\n    console.log('Example button clicked!')\n    if (this.onExample) {\n      this.onExample()\n    } else {\n      console.log('Example functionality not implemented')\n    }\n  }\n\n  handleExport() {\n    console.log('Export button clicked!')\n    if (this.onExport) {\n      this.onExport()\n    } else {\n      console.log('Export functionality not implemented')\n    }\n  }\n\n  handleHelp() {\n    console.log('Help button clicked!')\n    if (this.onHelp) {\n      this.onHelp()\n    } else {\n      console.log('Help functionality not implemented')\n    }\n  }\n\n  updateLabels() {\n    // Update title and subtitle\n    if (this.titleElement) {\n      this.titleElement.textContent = languageManager.t('header.title')\n    }\n\n    if (this.subtitleElement) {\n      this.subtitleElement.textContent = languageManager.t('header.subtitle')\n    }\n\n    // Update document title\n    document.title = languageManager.t('app.title')\n  }\n\n  // Public API\n  setTitle(title) {\n    this.title = title\n    if (this.titleElement) {\n      this.titleElement.textContent = title\n    }\n  }\n\n  setSubtitle(subtitle) {\n    this.subtitle = subtitle\n    if (this.subtitleElement) {\n      this.subtitleElement.textContent = subtitle\n    } else if (subtitle) {\n      // Create subtitle element if it doesn't exist\n      this.subtitleElement = document.createElement('p')\n      this.subtitleElement.className = 'organism-header__subtitle'\n      this.subtitleElement.textContent = subtitle\n\n      const titleSection = this.element?.querySelector('.organism-header__title-section')\n      if (titleSection) {\n        titleSection.appendChild(this.subtitleElement)\n      }\n    }\n  }\n\n  hideToolbar() {\n    if (this.toolbar && this.toolbar.element) {\n      this.toolbar.element.style.display = 'none'\n    }\n  }\n\n  showToolbar() {\n    if (this.toolbar && this.toolbar.element) {\n      this.toolbar.element.style.display = 'flex'\n    }\n  }\n\n  enableAction(key) {\n    if (this.toolbar) {\n      this.toolbar.enableAction(key)\n    }\n  }\n\n  disableAction(key) {\n    if (this.toolbar) {\n      this.toolbar.disableAction(key)\n    }\n  }\n\n  updateAction(key, updates) {\n    if (this.toolbar) {\n      this.toolbar.updateAction(key, updates)\n    }\n  }\n\n  // State management\n  setLoading(loading) {\n    if (loading) {\n      this.element?.classList.add('organism-header--loading')\n      this.disableAction('export')\n    } else {\n      this.element?.classList.remove('organism-header--loading')\n      this.enableAction('export')\n    }\n  }\n\n  // Responsive behavior\n  setMobileMode(isMobile) {\n    if (isMobile) {\n      this.element?.classList.add('organism-header--mobile')\n      if (this.toolbar) {\n        this.toolbar.setVariant('mobile')\n      }\n    } else {\n      this.element?.classList.remove('organism-header--mobile')\n      if (this.toolbar) {\n        this.toolbar.setVariant('compact')\n      }\n    }\n  }\n\n  // Animation\n  animateIn() {\n    if (this.element) {\n      this.element.classList.add('organism-header--animate-in')\n\n      setTimeout(() => {\n        this.element.classList.remove('organism-header--animate-in')\n      }, 500)\n    }\n  }\n\n  // Focus management\n  focus() {\n    if (this.toolbar) {\n      this.toolbar.focus()\n    } else if (this.titleElement) {\n      this.titleElement.focus()\n    }\n  }\n\n  destroy() {\n    // Unsubscribe from language changes\n    if (this.unsubscribe) {\n      this.unsubscribe()\n    }\n\n    // Destroy toolbar\n    if (this.toolbar) {\n      this.toolbar.destroy()\n    }\n\n    // Remove element\n    if (this.element && this.element.parentNode) {\n      this.element.parentNode.removeChild(this.element)\n    }\n\n    this.element = null\n    this.titleElement = null\n    this.subtitleElement = null\n    this.toolbar = null\n  }\n}\n\nexport default Header\n","/**\n * TextInput Atom Component\n * Basic text input element with support for different input types\n */\n\nclass TextInput {\n  constructor(options = {}) {\n    this.type = options.type || 'text'\n    this.placeholder = options.placeholder || ''\n    this.value = options.value || ''\n    this.disabled = options.disabled || false\n    this.required = options.required || false\n    this.multiline = options.multiline || false\n    this.rows = options.rows || 3\n    this.onChange = options.onChange || null\n    this.onFocus = options.onFocus || null\n    this.onBlur = options.onBlur || null\n    this.ariaLabel = options.ariaLabel || ''\n    this.id = options.id || `text-input-${Date.now()}`\n\n    this.element = null\n  }\n\n  render() {\n    if (this.element) {\n      return this.element\n    }\n\n    this.element = this.multiline\n      ? document.createElement('textarea')\n      : document.createElement('input')\n\n    this.setupElement()\n    this.attachEventListeners()\n\n    return this.element\n  }\n\n  setupElement() {\n    this.element.className = this.getClassName()\n    this.element.placeholder = this.placeholder\n    this.element.value = this.value\n    this.element.disabled = this.disabled\n    this.element.required = this.required\n    this.element.id = this.id\n\n    if (this.ariaLabel) {\n      this.element.setAttribute('aria-label', this.ariaLabel)\n    }\n\n    if (!this.multiline) {\n      this.element.type = this.type\n    } else {\n      this.element.rows = this.rows\n      this.element.setAttribute('resize', 'vertical')\n    }\n  }\n\n  getClassName() {\n    const baseClass = 'atom-text-input'\n    const multilineClass = this.multiline ? 'atom-text-input--multiline' : ''\n    const disabledClass = this.disabled ? 'atom-text-input--disabled' : ''\n\n    return [baseClass, multilineClass, disabledClass]\n      .filter(Boolean)\n      .join(' ')\n  }\n\n  attachEventListeners() {\n    if (this.onChange) {\n      this.element.addEventListener('input', (event) => {\n        this.value = event.target.value\n        this.onChange(event.target.value, event)\n      })\n    }\n\n    if (this.onFocus) {\n      this.element.addEventListener('focus', this.onFocus)\n    }\n\n    if (this.onBlur) {\n      this.element.addEventListener('blur', this.onBlur)\n    }\n\n    // Auto-resize for multiline inputs\n    if (this.multiline) {\n      this.element.addEventListener('input', this.autoResize.bind(this))\n    }\n  }\n\n  autoResize() {\n    if (!this.multiline || !this.element) return\n\n    this.element.style.height = 'auto'\n    this.element.style.height = this.element.scrollHeight + 'px'\n  }\n\n  getValue() {\n    return this.element ? this.element.value : this.value\n  }\n\n  setValue(value) {\n    this.value = value\n    if (this.element) {\n      this.element.value = value\n      if (this.multiline) {\n        this.autoResize()\n      }\n    }\n  }\n\n  setPlaceholder(placeholder) {\n    this.placeholder = placeholder\n    if (this.element) {\n      this.element.placeholder = placeholder\n    }\n  }\n\n  setDisabled(disabled) {\n    this.disabled = disabled\n    if (this.element) {\n      this.element.disabled = disabled\n      this.element.className = this.getClassName()\n    }\n  }\n\n  focus() {\n    if (this.element) {\n      this.element.focus()\n    }\n  }\n\n  blur() {\n    if (this.element) {\n      this.element.blur()\n    }\n  }\n\n  select() {\n    if (this.element) {\n      this.element.select()\n    }\n  }\n\n  setSelectionRange(start, end) {\n    if (this.element && this.element.setSelectionRange) {\n      this.element.setSelectionRange(start, end)\n    }\n  }\n\n  insertTextAtCursor(text) {\n    if (!this.element) return\n\n    const start = this.element.selectionStart\n    const end = this.element.selectionEnd\n    const value = this.element.value\n\n    const newValue = value.slice(0, start) + text + value.slice(end)\n    this.setValue(newValue)\n\n    // Set cursor position after inserted text\n    const newCursorPos = start + text.length\n    setTimeout(() => {\n      this.setSelectionRange(newCursorPos, newCursorPos)\n    }, 0)\n  }\n\n  destroy() {\n    if (this.element && this.element.parentNode) {\n      this.element.removeEventListener('input', this.onChange)\n      this.element.removeEventListener('focus', this.onFocus)\n      this.element.removeEventListener('blur', this.onBlur)\n      this.element.parentNode.removeChild(this.element)\n    }\n    this.element = null\n  }\n}\n\nexport default TextInput\n","/**\n * TextEditor Molecule Component\n * Enhanced text input with markdown support and features\n */\n\nimport TextInput from '../../atoms/TextInput/index.js'\nimport languageManager from '../../i18n/LanguageManager.js'\n\nclass TextEditor {\n  constructor(options = {}) {\n    this.value = options.value || ''\n    this.placeholder = options.placeholder || languageManager.t('editor.placeholder')\n    this.onChange = options.onChange || null\n    this.onFocus = options.onFocus || null\n    this.onBlur = options.onBlur || null\n    this.autoSave = options.autoSave !== false\n    this.showStats = options.showStats !== false\n    this.enableShortcuts = options.enableShortcuts !== false\n\n    this.element = null\n    this.textInput = null\n    this.statsElement = null\n    this.statusElement = null\n\n    // Editor state\n    this.isDirty = false\n    this.lastSavedValue = this.value\n    this.autoSaveTimeout = null\n\n    // Statistics\n    this.stats = {\n      characters: 0,\n      words: 0,\n      lines: 0\n    }\n\n    // Subscribe to language changes\n    this.unsubscribe = languageManager.subscribe(this.updateLabels.bind(this))\n  }\n\n  render() {\n    if (this.element) {\n      return this.element\n    }\n\n    this.element = document.createElement('div')\n    this.element.className = 'molecule-text-editor'\n\n    // Create text input\n    this.createTextInput()\n\n    // Create stats bar if enabled\n    if (this.showStats) {\n      this.createStatsBar()\n    }\n\n    // Setup auto-save if enabled\n    if (this.autoSave) {\n      this.setupAutoSave()\n    }\n\n    // Setup keyboard shortcuts if enabled\n    if (this.enableShortcuts) {\n      this.setupKeyboardShortcuts()\n    }\n\n    // Initial stats calculation\n    this.updateStats()\n\n    return this.element\n  }\n\n  createTextInput() {\n    this.textInput = new TextInput({\n      multiline: true,\n      rows: 20,\n      placeholder: this.placeholder,\n      value: this.value,\n      ariaLabel: languageManager.t('editor.title'),\n      onChange: this.handleChange.bind(this),\n      onFocus: this.handleFocus.bind(this),\n      onBlur: this.handleBlur.bind(this)\n    })\n\n    const inputElement = this.textInput.render()\n    inputElement.classList.add('molecule-text-editor__input')\n\n    this.element.appendChild(inputElement)\n  }\n\n  createStatsBar() {\n    const statsBar = document.createElement('div')\n    statsBar.className = 'molecule-text-editor__stats'\n\n    // Stats display\n    this.statsElement = document.createElement('div')\n    this.statsElement.className = 'molecule-text-editor__stats-display'\n    statsBar.appendChild(this.statsElement)\n\n    // Status display\n    this.statusElement = document.createElement('div')\n    this.statusElement.className = 'molecule-text-editor__status'\n    statsBar.appendChild(this.statusElement)\n\n    this.element.appendChild(statsBar)\n\n    this.updateStatsDisplay()\n    this.updateStatusDisplay()\n  }\n\n  handleChange(value, event) {\n    this.value = value\n    this.isDirty = value !== this.lastSavedValue\n\n    // Update stats\n    this.updateStats()\n\n    // Trigger auto-save\n    if (this.autoSave) {\n      this.triggerAutoSave()\n    }\n\n    // Call external onChange handler\n    if (this.onChange) {\n      this.onChange(value, event, this.stats)\n    }\n\n    // Update status\n    this.updateStatusDisplay()\n  }\n\n  handleFocus(event) {\n    if (this.onFocus) {\n      this.onFocus(event)\n    }\n  }\n\n  handleBlur(event) {\n    if (this.onBlur) {\n      this.onBlur(event)\n    }\n\n    // Save on blur if auto-save is enabled\n    if (this.autoSave && this.isDirty) {\n      this.save()\n    }\n  }\n\n  updateStats() {\n    const text = this.value || ''\n\n    this.stats.characters = text.length\n    this.stats.words = text.trim() ? text.trim().split(/\\s+/).length : 0\n    this.stats.lines = text.split('\\n').length\n\n    if (this.statsElement) {\n      this.updateStatsDisplay()\n    }\n  }\n\n  updateStatsDisplay() {\n    if (!this.statsElement) return\n\n    const parts = [\n      `${this.stats.characters} ${languageManager.t('editor.characterCount')}`,\n      `${this.stats.words} ${languageManager.t('editor.wordCount')}`,\n      `${this.stats.lines} ${languageManager.t('editor.lineCount')}`\n    ]\n\n    this.statsElement.textContent = parts.join(' • ')\n  }\n\n  updateStatusDisplay() {\n    if (!this.statusElement) return\n\n    if (this.isDirty) {\n      this.statusElement.textContent = languageManager.t('editor.unsaved')\n      this.statusElement.className = 'molecule-text-editor__status molecule-text-editor__status--unsaved'\n    } else {\n      this.statusElement.textContent = languageManager.t('editor.saved')\n      this.statusElement.className = 'molecule-text-editor__status molecule-text-editor__status--saved'\n    }\n  }\n\n  updateLabels() {\n    // Update placeholder\n    if (this.textInput) {\n      this.textInput.setPlaceholder(languageManager.t('editor.placeholder'))\n    }\n\n    // Update stats and status\n    this.updateStatsDisplay()\n    this.updateStatusDisplay()\n  }\n\n  // Auto-save functionality\n  setupAutoSave() {\n    // Load from localStorage if available\n    try {\n      const saved = localStorage.getItem('mark2-editor-content')\n      if (saved && !this.value) {\n        this.setValue(saved)\n        this.lastSavedValue = saved\n        this.isDirty = false\n      }\n    } catch (error) {\n      console.warn('Could not load auto-saved content:', error)\n    }\n  }\n\n  triggerAutoSave() {\n    // Debounce auto-save\n    if (this.autoSaveTimeout) {\n      clearTimeout(this.autoSaveTimeout)\n    }\n\n    this.autoSaveTimeout = setTimeout(() => {\n      this.save()\n    }, 2000) // Save after 2 seconds of inactivity\n  }\n\n  save() {\n    try {\n      localStorage.setItem('mark2-editor-content', this.value)\n      this.lastSavedValue = this.value\n      this.isDirty = false\n      this.updateStatusDisplay()\n\n      // Show temporary saved indicator\n      this.showSavedIndicator()\n    } catch (error) {\n      console.error('Could not save content:', error)\n      this.showError(languageManager.t('errors.saveError'))\n    }\n  }\n\n  showSavedIndicator() {\n    if (!this.statusElement) return\n\n    this.statusElement.classList.add('molecule-text-editor__status--flash')\n    setTimeout(() => {\n      this.statusElement.classList.remove('molecule-text-editor__status--flash')\n    }, 1000)\n  }\n\n  showError(message) {\n    if (!this.statusElement) return\n\n    const originalText = this.statusElement.textContent\n    this.statusElement.textContent = message\n    this.statusElement.className = 'molecule-text-editor__status molecule-text-editor__status--error'\n\n    setTimeout(() => {\n      this.updateStatusDisplay()\n    }, 3000)\n  }\n\n  // Keyboard shortcuts\n  setupKeyboardShortcuts() {\n    if (!this.textInput || !this.textInput.element) return\n\n    this.textInput.element.addEventListener('keydown', (event) => {\n      // Ctrl/Cmd + S to save\n      if ((event.ctrlKey || event.metaKey) && event.key === 's') {\n        event.preventDefault()\n        this.save()\n      }\n\n      // Ctrl/Cmd + B for bold\n      if ((event.ctrlKey || event.metaKey) && event.key === 'b') {\n        event.preventDefault()\n        this.insertMarkdown('**', '**')\n      }\n\n      // Ctrl/Cmd + I for italic\n      if ((event.ctrlKey || event.metaKey) && event.key === 'i') {\n        event.preventDefault()\n        this.insertMarkdown('*', '*')\n      }\n\n      // Ctrl/Cmd + K for link\n      if ((event.ctrlKey || event.metaKey) && event.key === 'k') {\n        event.preventDefault()\n        this.insertMarkdown('[', '](url)')\n      }\n\n      // Tab for list indentation\n      if (event.key === 'Tab') {\n        const cursorPos = this.textInput.element.selectionStart\n        const lineStart = this.value.lastIndexOf('\\n', cursorPos - 1) + 1\n        const lineText = this.value.substring(lineStart, cursorPos)\n\n        if (lineText.match(/^\\s*[-*+]\\s/) || lineText.match(/^\\s*\\d+\\.\\s/)) {\n          event.preventDefault()\n          this.indentLine(event.shiftKey ? -1 : 1)\n        }\n      }\n    })\n  }\n\n  insertMarkdown(before, after = '') {\n    if (!this.textInput) return\n\n    const element = this.textInput.element\n    const start = element.selectionStart\n    const end = element.selectionEnd\n    const selectedText = this.value.substring(start, end)\n\n    const newText = before + selectedText + after\n    this.textInput.insertTextAtCursor(newText)\n\n    // Set cursor position\n    const newCursorPos = start + before.length + selectedText.length\n    setTimeout(() => {\n      element.setSelectionRange(newCursorPos, newCursorPos)\n    }, 0)\n  }\n\n  indentLine(direction) {\n    if (!this.textInput) return\n\n    const element = this.textInput.element\n    const cursorPos = element.selectionStart\n    const lineStart = this.value.lastIndexOf('\\n', cursorPos - 1) + 1\n    const lineEnd = this.value.indexOf('\\n', cursorPos)\n    const lineEndPos = lineEnd === -1 ? this.value.length : lineEnd\n\n    const lineText = this.value.substring(lineStart, lineEndPos)\n    let newLineText\n\n    if (direction > 0) {\n      // Indent\n      newLineText = '  ' + lineText\n    } else {\n      // Unindent\n      newLineText = lineText.replace(/^ {2}/, '')\n    }\n\n    const newValue = this.value.substring(0, lineStart) + newLineText + this.value.substring(lineEndPos)\n    this.setValue(newValue)\n\n    // Restore cursor position\n    const newCursorPos = cursorPos + (newLineText.length - lineText.length)\n    setTimeout(() => {\n      element.setSelectionRange(newCursorPos, newCursorPos)\n    }, 0)\n  }\n\n  // Public API\n  getValue() {\n    return this.value\n  }\n\n  setValue(value) {\n    this.value = value\n    if (this.textInput) {\n      this.textInput.setValue(value)\n    }\n    this.updateStats()\n    this.isDirty = value !== this.lastSavedValue\n    this.updateStatusDisplay()\n  }\n\n  clear() {\n    this.setValue('')\n  }\n\n  focus() {\n    if (this.textInput) {\n      this.textInput.focus()\n    }\n  }\n\n  insertText(text) {\n    if (this.textInput) {\n      this.textInput.insertTextAtCursor(text)\n    }\n  }\n\n  getStats() {\n    return { ...this.stats }\n  }\n\n  isDirtyContent() {\n    return this.isDirty\n  }\n\n  destroy() {\n    // Clear auto-save timeout\n    if (this.autoSaveTimeout) {\n      clearTimeout(this.autoSaveTimeout)\n    }\n\n    // Save before destroying if dirty\n    if (this.autoSave && this.isDirty) {\n      this.save()\n    }\n\n    // Unsubscribe from language changes\n    if (this.unsubscribe) {\n      this.unsubscribe()\n    }\n\n    // Destroy text input\n    if (this.textInput) {\n      this.textInput.destroy()\n    }\n\n    // Remove element\n    if (this.element && this.element.parentNode) {\n      this.element.parentNode.removeChild(this.element)\n    }\n\n    this.element = null\n    this.textInput = null\n    this.statsElement = null\n    this.statusElement = null\n  }\n}\n\nexport default TextEditor\n","/**\n * EditorPanel Organism Component\n * Complete editor section with toolbar and text editor\n */\n\nimport TextEditor from '../../molecules/TextEditor/index.js'\nimport Toolbar from '../../molecules/Toolbar/index.js'\nimport languageManager from '../../i18n/LanguageManager.js'\n// Example content will be inline to avoid fetch issues\n\nclass EditorPanel {\n  constructor(options = {}) {\n    this.onChange = options.onChange || null\n    this.onFocus = options.onFocus || null\n    this.onBlur = options.onBlur || null\n    this.showToolbar = options.showToolbar !== false\n    this.autoSave = options.autoSave !== false\n    this.showStats = options.showStats !== false\n\n    this.element = null\n    this.headerElement = null\n    this.titleElement = null\n    this.toolbar = null\n    this.textEditor = null\n\n    // Panel state\n    this.isVisible = true\n    this.isMinimized = false\n\n    // Subscribe to language changes\n    this.unsubscribe = languageManager.subscribe(this.updateLabels.bind(this))\n  }\n\n  render() {\n    if (this.element) {\n      return this.element\n    }\n\n    this.element = document.createElement('section')\n    this.element.className = 'organism-editor-panel'\n    this.element.setAttribute('role', 'region')\n    this.element.setAttribute('aria-label', languageManager.t('editor.title'))\n\n    // Create header\n    this.createHeader()\n\n    // Create content area\n    this.createContent()\n\n    // Load example content by default\n    this.loadExample()\n\n    return this.element\n  }\n\n  createHeader() {\n    this.headerElement = document.createElement('div')\n    this.headerElement.className = 'organism-editor-panel__header'\n\n    // Title\n    this.titleElement = document.createElement('h2')\n    this.titleElement.className = 'organism-editor-panel__title'\n    this.titleElement.textContent = languageManager.t('editor.title')\n    this.headerElement.appendChild(this.titleElement)\n\n    // Toolbar\n    if (this.showToolbar) {\n      this.createToolbar()\n    }\n\n    this.element.appendChild(this.headerElement)\n  }\n\n  createToolbar() {\n    const actions = [\n      {\n        key: 'clear',\n        variant: 'ghost',\n        onClick: this.handleClear.bind(this),\n        ariaLabel: 'buttons.clear',\n        title: 'buttons.clear'\n      },\n      {\n        key: 'example',\n        variant: 'ghost',\n        onClick: this.handleLoadExample.bind(this),\n        ariaLabel: 'buttons.example',\n        title: 'buttons.example'\n      }\n    ]\n\n    this.toolbar = new Toolbar({\n      variant: 'compact',\n      actions,\n      showLanguageSelector: false,\n      orientation: 'horizontal'\n    })\n\n    const toolbarElement = this.toolbar.render()\n    toolbarElement.classList.add('organism-editor-panel__toolbar')\n\n    this.headerElement.appendChild(toolbarElement)\n  }\n\n  createContent() {\n    const contentElement = document.createElement('div')\n    contentElement.className = 'organism-editor-panel__content'\n\n    // Create text editor\n    this.textEditor = new TextEditor({\n      placeholder: languageManager.t('editor.placeholder'),\n      onChange: this.handleChange.bind(this),\n      onFocus: this.handleFocus.bind(this),\n      onBlur: this.handleBlur.bind(this),\n      autoSave: this.autoSave,\n      showStats: this.showStats,\n      enableShortcuts: true\n    })\n\n    const editorElement = this.textEditor.render()\n    contentElement.appendChild(editorElement)\n\n    this.element.appendChild(contentElement)\n  }\n\n  handleChange(value, event, stats) {\n    // Emit change event to parent\n    if (this.onChange) {\n      this.onChange(value, stats, this)\n    }\n  }\n\n  handleFocus(event) {\n    this.element.classList.add('organism-editor-panel--focused')\n\n    if (this.onFocus) {\n      this.onFocus(event, this)\n    }\n  }\n\n  handleBlur(event) {\n    this.element.classList.remove('organism-editor-panel--focused')\n\n    if (this.onBlur) {\n      this.onBlur(event, this)\n    }\n  }\n\n  handleClear() {\n    this.clear()\n  }\n\n  handleLoadExample() {\n    this.loadExample()\n  }\n\n  updateLabels() {\n    // Update title\n    if (this.titleElement) {\n      this.titleElement.textContent = languageManager.t('editor.title')\n    }\n\n    // Update aria-label\n    if (this.element) {\n      this.element.setAttribute('aria-label', languageManager.t('editor.title'))\n    }\n  }\n\n  // Content management\n  getValue() {\n    return this.textEditor ? this.textEditor.getValue() : ''\n  }\n\n  setValue(value) {\n    if (this.textEditor) {\n      this.textEditor.setValue(value)\n    }\n  }\n\n  clear() {\n    if (this.textEditor) {\n      this.textEditor.clear()\n    }\n  }\n\n  insertText(text) {\n    if (this.textEditor) {\n      this.textEditor.insertText(text)\n    }\n  }\n\n  loadExample() {\n    // Use inline atomic design example content\n    const atomicDesignExample = `# Atomic Design\n\n## Conceitos Fundamentais\n\nO Atomic Design é uma metodologia para criar sistemas de design escaláveis e reutilizáveis.\n\n## Átomos\n### Elementos básicos\n- Botões\n- Inputs de texto\n- Labels\n- Ícones\n- Cores\n- Tipografia\n\n### Características\n- Não podem ser decompostos\n- Elementos HTML básicos\n- Propriedades fundamentais\n\n## Moléculas\n### Grupos de átomos\n- Formulários de busca\n- Barras de navegação\n- Cards de produto\n- Campos de formulário\n\n### Características\n- Combinam múltiplos átomos\n- Têm função específica\n- Reutilizáveis\n\n## Organismos\n### Seções complexas\n- Header completo\n- Sidebar com navegação\n- Footer com links\n- Lista de produtos\n\n### Características\n- Combinam moléculas e átomos\n- Seções distintas da interface\n- Contexto específico\n\n## Templates\n### Estruturas de página\n- Layout de homepage\n- Sistema de grid\n- Wireframes\n- Estrutura de conteúdo\n\n### Características\n- Esqueleto da página\n- Sem conteúdo real\n- Foco na estrutura\n\n## Páginas\n### Instâncias finais\n- Homepage com conteúdo real\n- Dashboard do usuário\n- Página de configurações\n- Página de produto\n\n### Características\n- Templates com dados reais\n- Experiência final do usuário\n- Casos de uso específicos`\n\n    this.setValue(atomicDesignExample)\n  }\n\n  // Statistics\n  getStats() {\n    return this.textEditor ? this.textEditor.getStats() : { characters: 0, words: 0, lines: 0 }\n  }\n\n  // State management\n  focus() {\n    if (this.textEditor) {\n      this.textEditor.focus()\n    }\n  }\n\n  show() {\n    this.isVisible = true\n    if (this.element) {\n      this.element.style.display = 'flex'\n      this.element.classList.remove('organism-editor-panel--hidden')\n      this.element.classList.add('organism-editor-panel--visible')\n    }\n  }\n\n  hide() {\n    this.isVisible = false\n    if (this.element) {\n      this.element.classList.remove('organism-editor-panel--visible')\n      this.element.classList.add('organism-editor-panel--hidden')\n\n      setTimeout(() => {\n        if (!this.isVisible) {\n          this.element.style.display = 'none'\n        }\n      }, 300)\n    }\n  }\n\n  minimize() {\n    this.isMinimized = true\n    if (this.element) {\n      this.element.classList.add('organism-editor-panel--minimized')\n    }\n  }\n\n  maximize() {\n    this.isMinimized = false\n    if (this.element) {\n      this.element.classList.remove('organism-editor-panel--minimized')\n    }\n  }\n\n  toggleMinimize() {\n    if (this.isMinimized) {\n      this.maximize()\n    } else {\n      this.minimize()\n    }\n  }\n\n  setLoading(loading) {\n    if (loading) {\n      this.element?.classList.add('organism-editor-panel--loading')\n      if (this.toolbar) {\n        this.toolbar.disableAction('clear')\n        this.toolbar.disableAction('example')\n      }\n    } else {\n      this.element?.classList.remove('organism-editor-panel--loading')\n      if (this.toolbar) {\n        this.toolbar.enableAction('clear')\n        this.toolbar.enableAction('example')\n      }\n    }\n  }\n\n  // Responsive behavior\n  setMobileMode(isMobile) {\n    if (isMobile) {\n      this.element?.classList.add('organism-editor-panel--mobile')\n      if (this.toolbar) {\n        this.toolbar.setVariant('mobile')\n      }\n    } else {\n      this.element?.classList.remove('organism-editor-panel--mobile')\n      if (this.toolbar) {\n        this.toolbar.setVariant('compact')\n      }\n    }\n  }\n\n  // Animation\n  animateIn() {\n    if (this.element) {\n      this.element.classList.add('organism-editor-panel--animate-in')\n\n      setTimeout(() => {\n        this.element.classList.remove('organism-editor-panel--animate-in')\n      }, 500)\n    }\n  }\n\n  // Export/Import\n  exportContent() {\n    const content = this.getValue()\n    const stats = this.getStats()\n\n    return {\n      content,\n      stats,\n      timestamp: new Date().toISOString(),\n      language: languageManager.getCurrentLanguage()\n    }\n  }\n\n  importContent(data) {\n    if (data && data.content) {\n      this.setValue(data.content)\n      return true\n    }\n    return false\n  }\n\n  // Error handling\n  showError(message) {\n    this.element?.classList.add('organism-editor-panel--error')\n\n    // Show error message in status area\n    if (this.textEditor && this.textEditor.showError) {\n      this.textEditor.showError(message)\n    }\n\n    setTimeout(() => {\n      this.element?.classList.remove('organism-editor-panel--error')\n    }, 3000)\n  }\n\n  destroy() {\n    // Unsubscribe from language changes\n    if (this.unsubscribe) {\n      this.unsubscribe()\n    }\n\n    // Destroy toolbar\n    if (this.toolbar) {\n      this.toolbar.destroy()\n    }\n\n    // Destroy text editor\n    if (this.textEditor) {\n      this.textEditor.destroy()\n    }\n\n    // Remove element\n    if (this.element && this.element.parentNode) {\n      this.element.parentNode.removeChild(this.element)\n    }\n\n    this.element = null\n    this.headerElement = null\n    this.titleElement = null\n    this.toolbar = null\n    this.textEditor = null\n  }\n}\n\nexport default EditorPanel\n","/**\n * mark2 Application Entry Point\n * Main application initialization and orchestration\n */\n\n// Import all styles in correct order\nimport './styles/variables.css'\nimport './styles/layout.css'\nimport './styles/modals.css'\nimport './styles/themes/light.css'\nimport './styles/themes/dark.css'\nimport './styles/themes/blue.css'\nimport './styles/themes/green.css'\nimport './styles/themes/orange.css'\nimport './styles/responsive/mobile.css'\nimport './atoms/Button/Button.css'\nimport './atoms/TextInput/TextInput.css'\nimport './atoms/Node/Node.css'\nimport './atoms/LanguageSelector/LanguageSelector.css'\nimport './molecules/Toolbar/Toolbar.css'\nimport './molecules/TextEditor/TextEditor.css'\nimport './organisms/Header/Header.css'\nimport './organisms/EditorPanel/EditorPanel.css'\nimport './organisms/MindMap/MindMap.css'\nimport './utils/ExportDialog.css'\nimport './styles/mindmap.css'\n\n// Import managers\nimport languageManager from './i18n/LanguageManager.js'\nimport themeManager from './theme/ThemeManager.js'\n\n// Import utilities\nimport { parseMarkdown } from './utils/markdownParser.js'\nimport { generateLayout } from './utils/mindMapGenerator.js'\nimport exampleLoader from './utils/ExampleLoader.js'\nimport MindMapRenderer from './utils/mindMapRenderer.js'\nimport exportUtils from './utils/ExportUtils.js'\n\n// Import organisms\nimport Header from './organisms/Header/index.js'\nimport EditorPanel from './organisms/EditorPanel/index.js'\n\n/**\n * Main Application Class\n * Orchestrates the entire mark2 application\n */\nclass Mark2App {\n  constructor() {\n    this.isInitialized = false\n    this.isMobile = window.innerWidth <= 767\n    this.currentView = this.isMobile ? 'editor' : 'split' // editor, mindmap, split\n\n    // Component instances\n    this.header = null\n    this.editorPanel = null\n    this.mindMapContainer = null\n    this.mindMapRenderer = null\n    this.mobileNav = null\n\n    // Application state\n    this.currentMarkdown = ''\n    this.currentMindMapData = null\n    this.isGenerating = false\n\n    // DOM elements\n    this.appElement = null\n    this.mainElement = null\n\n    // Bind methods\n    this.handleResize = this.handleResize.bind(this)\n    this.handleMarkdownChange = this.handleMarkdownChange.bind(this)\n  }\n\n  async init() {\n    try {\n      console.log('Initializing mark2 application...')\n\n      // Wait for DOM to be ready\n      if (document.readyState === 'loading') {\n        await new Promise(resolve => {\n          document.addEventListener('DOMContentLoaded', resolve)\n        })\n      }\n\n      // Initialize managers\n      await this.initializeManagers()\n\n      // Get app container\n      this.appElement = document.getElementById('app')\n      if (!this.appElement) {\n        throw new Error('App container element not found')\n      }\n\n      // Initialize UI components\n      this.initializeComponents()\n\n      // Setup event listeners\n      this.setupEventListeners()\n\n      // Setup responsive behavior\n      this.setupResponsive()\n\n      // Initial render\n      this.render()\n\n      // Show initial animation\n      this.animateIn()\n\n      this.isInitialized = true\n      console.log('mark2 application initialized successfully')\n    } catch (error) {\n      console.error('Failed to initialize mark2 application:', error)\n      this.showError('Failed to initialize application: ' + error.message)\n    }\n  }\n\n  async initializeManagers() {\n    // Language manager is auto-initialized\n    console.log(`Language: ${languageManager.getCurrentLanguage()}`)\n\n    // Theme manager is auto-initialized\n    console.log(`Theme: ${themeManager.getCurrentTheme()}`)\n\n    // Update page title\n    document.title = languageManager.t('app.title')\n  }\n\n  initializeComponents() {\n    // Create header\n    this.header = new Header({\n      onThemeToggle: this.handleThemeToggle.bind(this),\n      onExport: this.handleExport.bind(this),\n      onExample: this.handleExample.bind(this),\n      onHelp: this.handleHelp.bind(this)\n    })\n\n    // Create editor panel\n    this.editorPanel = new EditorPanel({\n      onChange: this.handleMarkdownChange,\n      showToolbar: true,\n      autoSave: true,\n      showStats: true\n    })\n\n    // Setup mobile navigation if needed\n    if (this.isMobile) {\n      this.setupMobileNavigation()\n    }\n  }\n\n  setupEventListeners() {\n    // Window resize\n    window.addEventListener('resize', this.handleResize)\n\n    // Keyboard shortcuts\n    document.addEventListener('keydown', this.handleKeyboardShortcuts.bind(this))\n\n    // Language changes\n    languageManager.subscribe(this.handleLanguageChange.bind(this))\n\n    // Theme changes\n    themeManager.subscribe(this.handleThemeChange.bind(this))\n\n    // Prevent accidental page leave\n    window.addEventListener('beforeunload', this.handleBeforeUnload.bind(this))\n  }\n\n  setupResponsive() {\n    // Initial responsive setup\n    this.updateResponsiveState()\n\n    // Listen for orientation changes\n    if ('orientation' in screen) {\n      screen.orientation.addEventListener('change', () => {\n        setTimeout(() => this.updateResponsiveState(), 100)\n      })\n    }\n  }\n\n  setupMobileNavigation() {\n    this.mobileNav = document.querySelector('.organism-mobile-nav')\n    if (this.mobileNav) {\n      const editorTab = this.mobileNav.querySelector('#mobile-editor-tab')\n      const mindmapTab = this.mobileNav.querySelector('#mobile-mindmap-tab')\n\n      if (editorTab && mindmapTab) {\n        editorTab.addEventListener('click', () => this.setMobileView('editor'))\n        mindmapTab.addEventListener('click', () => this.setMobileView('mindmap'))\n      }\n    }\n  }\n\n  render() {\n    // Instead of clearing and rebuilding, connect to existing HTML elements\n    this.connectToExistingHTML()\n\n    // Initialize UI texts with current language\n    this.updateUITexts()\n\n    // Apply initial view state\n    this.updateViewState()\n  }\n\n  connectToExistingHTML() {\n    console.log('Connecting to existing HTML elements...')\n\n    // Connect to header buttons\n    this.connectHeaderButtons()\n\n    // Connect to editor elements\n    this.connectEditorElements()\n\n    // Connect to mind map container\n    this.connectMindMapContainer()\n\n    // Connect mobile navigation\n    this.connectMobileNavigation()\n  }\n\n  connectHeaderButtons() {\n    // Language button\n    const languageButton = document.getElementById('language-toggle')\n    if (languageButton) {\n      console.log('Connecting language button')\n      languageButton.addEventListener('click', this.handleLanguageToggle.bind(this))\n    }\n\n    // Theme button\n    const themeButton = document.getElementById('theme-toggle')\n    if (themeButton) {\n      console.log('Connecting theme button')\n      themeButton.addEventListener('click', this.handleThemeToggle.bind(this))\n    }\n\n    // Export button\n    const exportButton = document.getElementById('export-button')\n    if (exportButton) {\n      console.log('Connecting export button')\n      exportButton.addEventListener('click', this.handleExport.bind(this))\n    }\n\n    // Help button\n    const helpButton = document.getElementById('help-button')\n    if (helpButton) {\n      console.log('Connecting help button')\n      helpButton.addEventListener('click', this.handleHelp.bind(this))\n    }\n\n    // Connect language modal\n    this.connectLanguageModal()\n\n    // Connect theme modal\n    this.connectThemeModal()\n\n    // Connect help modal\n    this.connectHelpModal()\n  }\n\n  connectEditorElements() {\n    // Connect to existing editor elements\n    const markdownInput = document.getElementById('markdown-input')\n    if (markdownInput) {\n      console.log('Connecting markdown input')\n      markdownInput.addEventListener('input', (e) => {\n        this.handleMarkdownChange(e.target.value)\n      })\n    }\n\n    // Connect editor buttons\n    const clearButton = document.getElementById('clear-button')\n    if (clearButton) {\n      console.log('Connecting clear button')\n      clearButton.addEventListener('click', () => {\n        if (markdownInput) markdownInput.value = ''\n        this.handleMarkdownChange('')\n      })\n    }\n\n    const exampleButton = document.getElementById('example-button')\n    if (exampleButton) {\n      console.log('Connecting example button')\n      exampleButton.addEventListener('click', this.handleExample.bind(this))\n    }\n  }\n\n  connectMindMapContainer() {\n    this.mindMapContainer = document.getElementById('mind-map-container')\n    if (this.mindMapContainer) {\n      console.log('Connected to mind map container')\n\n      // Inicializar o renderer\n      this.mindMapRenderer = new MindMapRenderer(this.mindMapContainer)\n      console.log('Mind map renderer initialized')\n\n      // Conectar botões de controle\n      this.connectMindMapControls()\n    }\n  }\n\n  connectMindMapControls() {\n    const zoomInBtn = document.getElementById('zoom-in-button')\n    const zoomOutBtn = document.getElementById('zoom-out-button')\n    const fitScreenBtn = document.getElementById('fit-screen-button')\n\n    if (zoomInBtn && this.mindMapRenderer) {\n      zoomInBtn.addEventListener('click', () => {\n        console.log('Zoom in clicked')\n        this.mindMapRenderer.zoomIn()\n      })\n    }\n\n    if (zoomOutBtn && this.mindMapRenderer) {\n      zoomOutBtn.addEventListener('click', () => {\n        console.log('Zoom out clicked')\n        this.mindMapRenderer.zoomOut()\n      })\n    }\n\n    if (fitScreenBtn && this.mindMapRenderer) {\n      fitScreenBtn.addEventListener('click', () => {\n        console.log('Fit screen clicked')\n        this.mindMapRenderer.resetView()\n      })\n    }\n  }\n\n  connectMobileNavigation() {\n    const editorTab = document.getElementById('mobile-editor-tab')\n    const mindmapTab = document.getElementById('mobile-mindmap-tab')\n\n    if (editorTab && mindmapTab) {\n      console.log('Connecting mobile navigation')\n      editorTab.addEventListener('click', () => this.setMobileView('editor'))\n      mindmapTab.addEventListener('click', () => this.setMobileView('mindmap'))\n    }\n  }\n\n  createMindMapContainer() {\n    const mindMapSection = document.createElement('section')\n    mindMapSection.className = 'organism-mind-map'\n    mindMapSection.setAttribute('role', 'img')\n    mindMapSection.setAttribute('aria-label', languageManager.t('mindMap.title'))\n\n    // Header\n    const header = document.createElement('div')\n    header.className = 'organism-mind-map__header'\n\n    const title = document.createElement('h2')\n    title.className = 'organism-mind-map__title'\n    title.textContent = languageManager.t('mindMap.title')\n    header.appendChild(title)\n\n    // Placeholder toolbar\n    const toolbar = document.createElement('div')\n    toolbar.className = 'molecule-toolbar molecule-toolbar--compact'\n    toolbar.innerHTML = `\n      <button class=\"atom-button atom-button--ghost atom-button--small\" id=\"zoom-in-button\">\n        ${languageManager.t('buttons.zoomIn')}\n      </button>\n      <button class=\"atom-button atom-button--ghost atom-button--small\" id=\"zoom-out-button\">\n        ${languageManager.t('buttons.zoomOut')}\n      </button>\n      <button class=\"atom-button atom-button--ghost atom-button--small\" id=\"fit-screen-button\">\n        ${languageManager.t('buttons.fitScreen')}\n      </button>\n    `\n    header.appendChild(toolbar)\n\n    mindMapSection.appendChild(header)\n\n    // Content\n    const content = document.createElement('div')\n    content.className = 'organism-mind-map__content'\n\n    const container = document.createElement('div')\n    container.id = 'mind-map-container'\n    container.className = 'mind-map-container'\n\n    // Empty state\n    const emptyState = document.createElement('div')\n    emptyState.id = 'empty-state'\n    emptyState.className = 'mind-map-empty'\n    emptyState.innerHTML = `<p>${languageManager.t('mindMap.empty')}</p>`\n    container.appendChild(emptyState)\n\n    content.appendChild(container)\n    mindMapSection.appendChild(content)\n\n    this.mindMapContainer = mindMapSection\n    this.mainElement.appendChild(mindMapSection)\n  }\n\n  // Event handlers\n  handleMarkdownChange(value, stats) {\n    console.log('handleMarkdownChange called with value length:', value.length)\n    console.log('First 100 chars:', value.substring(0, 100))\n    this.currentMarkdown = value\n\n    // Debounce mind map generation\n    if (this.generateTimeout) {\n      clearTimeout(this.generateTimeout)\n    }\n\n    this.generateTimeout = setTimeout(() => {\n      console.log('About to generate mind map for markdown')\n      this.generateMindMap(value)\n    }, 500)\n  }\n\n  async generateMindMap(markdown) {\n    if (!markdown.trim()) {\n      this.showEmptyState()\n      return\n    }\n\n    try {\n      this.setGenerating(true)\n\n      // Parse markdown\n      const parsedData = parseMarkdown(markdown)\n\n      if (parsedData.error) {\n        throw new Error(parsedData.error)\n      }\n\n      // Generate layout\n      const layout = generateLayout(parsedData, 800, 600)\n\n      this.currentMindMapData = layout\n\n      // For now, just show a simple representation\n      this.renderMindMapPlaceholder(parsedData)\n    } catch (error) {\n      console.error('Error generating mind map:', error)\n      this.showMindMapError(error.message)\n    } finally {\n      this.setGenerating(false)\n    }\n  }\n\n  renderMindMapPlaceholder(data) {\n    if (!this.mindMapRenderer) {\n      console.error('Mind map renderer not initialized')\n      return\n    }\n\n    console.log('Rendering mind map with SVG renderer:', data)\n\n    // Hide loading and empty states\n    const loadingIndicator = document.getElementById('loading-indicator')\n    const emptyState = document.getElementById('empty-state')\n    const errorState = document.getElementById('error-state')\n\n    if (loadingIndicator) loadingIndicator.style.display = 'none'\n    if (emptyState) emptyState.style.display = 'none'\n    if (errorState) errorState.style.display = 'none'\n\n    // Render the actual mind map\n    try {\n      this.mindMapRenderer.render(data)\n      console.log('Mind map rendered successfully')\n    } catch (error) {\n      console.error('Error rendering mind map:', error)\n      this.showMindMapError('Erro ao renderizar o mapa mental: ' + error.message)\n    }\n  }\n\n  showEmptyState() {\n    const container = document.getElementById('mind-map-container')\n    if (container) {\n      container.innerHTML = `\n        <div class=\"mind-map-empty\">\n          <p>${languageManager.t('mindMap.empty')}</p>\n        </div>\n      `\n    }\n  }\n\n  showMindMapError(message) {\n    const container = document.getElementById('mind-map-container')\n    if (container) {\n      container.innerHTML = `\n        <div class=\"mind-map-error\">\n          <p>${languageManager.t('mindMap.error')}</p>\n          <small>${message}</small>\n        </div>\n      `\n    }\n  }\n\n  setGenerating(generating) {\n    this.isGenerating = generating\n\n    const container = document.getElementById('mind-map-container')\n    if (container) {\n      if (generating) {\n        container.innerHTML = `\n          <div class=\"mind-map-loading\">\n            <div class=\"atom-spinner\"></div>\n            <p>${languageManager.t('mindMap.generating')}</p>\n          </div>\n        `\n      }\n    }\n  }\n\n  handleThemeToggle() {\n    console.log('handleThemeToggle called - opening theme modal')\n    this.showThemeModal()\n  }\n\n  handleExport() {\n    console.log('handleExport called')\n\n    if (!this.mindMapRenderer) {\n      alert('No mind map to export. Please create a mind map first.')\n      return\n    }\n\n    // Get the SVG element from the mind map renderer\n    const svgElement = this.mindMapContainer.querySelector('svg')\n\n    if (!svgElement) {\n      alert('No mind map visualization found. Please create a mind map first.')\n      return\n    }\n\n    try {\n      exportUtils.showExportModal(svgElement)\n    } catch (error) {\n      console.error('Export error:', error)\n      alert('Failed to show export options: ' + error.message)\n    }\n  }\n\n  handleExample() {\n    console.log('handleExample called')\n\n    // Load Atomic Design example directly into textarea\n    const markdownInput = document.getElementById('markdown-input')\n    if (markdownInput) {\n      const atomicDesignExample = `# Atomic Design\n\n## Conceitos Fundamentais\n\nO Atomic Design é uma metodologia para criar sistemas de design escaláveis e reutilizáveis.\n\n## Átomos\n### Elementos básicos\n- Botões\n- Inputs de texto\n- Labels\n- Ícones\n- Cores\n- Tipografia\n\n### Características\n- Não podem ser decompostos\n- Elementos HTML básicos\n- Propriedades fundamentais\n\n## Moléculas\n### Grupos de átomos\n- Formulários de busca\n- Barras de navegação\n- Cards de produto\n- Campos de formulário\n\n### Características\n- Combinam múltiplos átomos\n- Têm função específica\n- Reutilizáveis\n\n## Organismos\n### Seções complexas\n- Header completo\n- Sidebar com navegação\n- Footer com links\n- Lista de produtos\n\n### Características\n- Combinam moléculas e átomos\n- Seções distintas da interface\n- Contexto específico\n\n## Templates\n### Estruturas de página\n- Layout de homepage\n- Sistema de grid\n- Wireframes\n- Estrutura de conteúdo\n\n### Características\n- Esqueleto da página\n- Sem conteúdo real\n- Foco na estrutura\n\n## Páginas\n### Instâncias finais\n- Homepage com conteúdo real\n- Dashboard do usuário\n- Página de configurações\n- Página de produto\n\n### Características\n- Templates com dados reais\n- Experiência final do usuário\n- Casos de uso específicos`\n\n      console.log('Loading example content into textarea')\n      markdownInput.value = atomicDesignExample\n\n      // Trigger the markdown change event\n      this.handleMarkdownChange(atomicDesignExample)\n\n      console.log('Example loaded successfully')\n    } else {\n      console.error('Markdown input textarea not found')\n    }\n\n    // If on mobile, switch to editor view to show the loaded content\n    if (this.isMobile) {\n      console.log('Setting mobile view to editor')\n      this.setMobileView('editor')\n    }\n  }\n\n  handleHelp() {\n    this.showHelpModal()\n  }\n\n  handleLanguageToggle() {\n    console.log('handleLanguageToggle called - opening language modal')\n    this.showLanguageModal()\n  }\n\n  // Theme Modal Methods\n  connectThemeModal() {\n    const themeModal = document.getElementById('theme-modal')\n    if (!themeModal) return\n\n    // Close button\n    const closeButton = document.getElementById('theme-modal-close')\n    if (closeButton) {\n      closeButton.addEventListener('click', () => this.hideThemeModal())\n    }\n\n    // Backdrop click to close\n    const backdrop = themeModal.querySelector('.molecule-modal__backdrop')\n    if (backdrop) {\n      backdrop.addEventListener('click', () => this.hideThemeModal())\n    }\n\n    // Theme radio buttons\n    const themeInputs = themeModal.querySelectorAll('input[name=\"theme\"]')\n    themeInputs.forEach(input => {\n      input.addEventListener('change', (e) => {\n        if (e.target.checked) {\n          console.log('Theme selected:', e.target.value)\n          themeManager.setTheme(e.target.value)\n          this.hideThemeModal()\n        }\n      })\n    })\n\n    // Set current theme as selected\n    this.updateThemeModalSelection()\n  }\n\n  showThemeModal() {\n    const themeModal = document.getElementById('theme-modal')\n    if (themeModal) {\n      this.updateThemeModalSelection()\n      themeModal.setAttribute('aria-hidden', 'false')\n      themeModal.style.display = 'flex'\n\n      // Focus management\n      const firstRadio = themeModal.querySelector('input[name=\"theme\"]:checked')\n      if (firstRadio) {\n        firstRadio.focus()\n      }\n    }\n  }\n\n  hideThemeModal() {\n    const themeModal = document.getElementById('theme-modal')\n    if (themeModal) {\n      themeModal.setAttribute('aria-hidden', 'true')\n      themeModal.style.display = 'none'\n    }\n  }\n\n  updateThemeModalSelection() {\n    const currentTheme = themeManager.getCurrentTheme()\n    const themeInput = document.querySelector(`input[name=\"theme\"][value=\"${currentTheme}\"]`)\n    if (themeInput) {\n      themeInput.checked = true\n    }\n  }\n\n  // Help Modal Methods\n  connectHelpModal() {\n    const helpModal = document.getElementById('help-modal')\n    if (!helpModal) return\n\n    // Close button\n    const closeButton = document.getElementById('help-modal-close')\n    if (closeButton) {\n      closeButton.addEventListener('click', () => this.hideHelpModal())\n    }\n\n    // Backdrop click to close\n    const backdrop = helpModal.querySelector('.molecule-modal__backdrop')\n    if (backdrop) {\n      backdrop.addEventListener('click', () => this.hideHelpModal())\n    }\n\n    // Tab buttons\n    const tabButtons = helpModal.querySelectorAll('.help-tabs__button')\n    tabButtons.forEach(button => {\n      button.addEventListener('click', (e) => {\n        const targetTab = e.target.getAttribute('data-tab')\n        this.switchHelpTab(targetTab)\n      })\n    })\n\n    // ESC key to close\n    document.addEventListener('keydown', (e) => {\n      if (e.key === 'Escape') {\n        if (helpModal.getAttribute('aria-hidden') === 'false') {\n          this.hideHelpModal()\n        }\n        const themeModal = document.getElementById('theme-modal')\n        if (themeModal && themeModal.getAttribute('aria-hidden') === 'false') {\n          this.hideThemeModal()\n        }\n      }\n    })\n  }\n\n  switchHelpTab(tabId) {\n    // Update tab buttons\n    const tabButtons = document.querySelectorAll('.help-tabs__button')\n    tabButtons.forEach(button => {\n      button.classList.remove('active')\n      if (button.getAttribute('data-tab') === tabId) {\n        button.classList.add('active')\n      }\n    })\n\n    // Update tab content\n    const tabContents = document.querySelectorAll('.help-tab-content')\n    tabContents.forEach(content => {\n      content.classList.remove('active')\n    })\n\n    const targetContent = document.getElementById(`tab-${tabId}`)\n    if (targetContent) {\n      targetContent.classList.add('active')\n    }\n  }\n\n  showHelpModal() {\n    const helpModal = document.getElementById('help-modal')\n    if (helpModal) {\n      helpModal.setAttribute('aria-hidden', 'false')\n      helpModal.style.display = 'flex'\n    }\n  }\n\n  hideHelpModal() {\n    const helpModal = document.getElementById('help-modal')\n    if (helpModal) {\n      helpModal.setAttribute('aria-hidden', 'true')\n      helpModal.style.display = 'none'\n    }\n  }\n\n  // Language Modal Methods\n  connectLanguageModal() {\n    const languageModal = document.getElementById('language-modal')\n    if (!languageModal) return\n\n    // Close button\n    const closeButton = document.getElementById('language-modal-close')\n    if (closeButton) {\n      closeButton.addEventListener('click', () => this.hideLanguageModal())\n    }\n\n    // Backdrop click to close\n    const backdrop = languageModal.querySelector('.molecule-modal__backdrop')\n    if (backdrop) {\n      backdrop.addEventListener('click', () => this.hideLanguageModal())\n    }\n\n    // Language radio buttons\n    const languageInputs = languageModal.querySelectorAll('input[name=\"language\"]')\n    languageInputs.forEach(input => {\n      input.addEventListener('change', (e) => {\n        if (e.target.checked) {\n          console.log('Language selected:', e.target.value)\n          languageManager.setLanguage(e.target.value)\n          this.hideLanguageModal()\n        }\n      })\n    })\n\n    // Set current language as selected\n    this.updateLanguageModalSelection()\n  }\n\n  showLanguageModal() {\n    const languageModal = document.getElementById('language-modal')\n    if (languageModal) {\n      this.updateLanguageModalSelection()\n      languageModal.setAttribute('aria-hidden', 'false')\n      languageModal.style.display = 'flex'\n\n      // Focus management\n      const firstRadio = languageModal.querySelector('input[name=\"language\"]:checked')\n      if (firstRadio) {\n        firstRadio.focus()\n      }\n    }\n  }\n\n  hideLanguageModal() {\n    const languageModal = document.getElementById('language-modal')\n    if (languageModal) {\n      languageModal.setAttribute('aria-hidden', 'true')\n      languageModal.style.display = 'none'\n    }\n  }\n\n  updateLanguageModalSelection() {\n    const currentLanguage = languageManager.getCurrentLanguage()\n    const languageInput = document.querySelector(`input[name=\"language\"][value=\"${currentLanguage}\"]`)\n    if (languageInput) {\n      languageInput.checked = true\n    }\n  }\n\n  handleResize() {\n    const wasMobile = this.isMobile\n    this.isMobile = window.innerWidth <= 767\n\n    if (wasMobile !== this.isMobile) {\n      this.updateResponsiveState()\n    }\n  }\n\n  updateResponsiveState() {\n    if (this.isMobile) {\n      document.body.classList.add('mobile-layout')\n      this.currentView = 'editor'\n\n      if (this.header) {\n        this.header.setMobileMode(true)\n      }\n      if (this.editorPanel) {\n        this.editorPanel.setMobileMode(true)\n      }\n    } else {\n      document.body.classList.remove('mobile-layout')\n      this.currentView = 'split'\n\n      if (this.header) {\n        this.header.setMobileMode(false)\n      }\n      if (this.editorPanel) {\n        this.editorPanel.setMobileMode(false)\n      }\n    }\n\n    this.updateViewState()\n  }\n\n  setMobileView(view) {\n    if (!this.isMobile) return\n\n    this.currentView = view\n    this.updateViewState()\n\n    // Update mobile nav tabs\n    const editorTab = document.getElementById('mobile-editor-tab')\n    const mindmapTab = document.getElementById('mobile-mindmap-tab')\n\n    if (editorTab && mindmapTab) {\n      editorTab.setAttribute('aria-pressed', view === 'editor' ? 'true' : 'false')\n      mindmapTab.setAttribute('aria-pressed', view === 'mindmap' ? 'true' : 'false')\n    }\n  }\n\n  updateViewState() {\n    const editorElement = this.editorPanel?.element\n    const mindMapElement = this.mindMapContainer\n\n    if (!editorElement || !mindMapElement) return\n\n    if (this.isMobile) {\n      // Mobile: show only active panel\n      if (this.currentView === 'editor') {\n        editorElement.classList.add('active')\n        mindMapElement.classList.remove('active')\n      } else {\n        editorElement.classList.remove('active')\n        mindMapElement.classList.add('active')\n      }\n    } else {\n      // Desktop: show both panels\n      editorElement.classList.add('active')\n      mindMapElement.classList.add('active')\n    }\n  }\n\n  handleKeyboardShortcuts(event) {\n    // Global shortcuts\n    if ((event.ctrlKey || event.metaKey)) {\n      switch (event.key) {\n      case ',':\n        event.preventDefault()\n        this.handleHelp()\n        break\n      case 'e':\n        if (this.isMobile) {\n          event.preventDefault()\n          this.setMobileView('editor')\n        }\n        break\n      case 'm':\n        if (this.isMobile) {\n          event.preventDefault()\n          this.setMobileView('mindmap')\n        }\n        break\n      }\n    }\n  }\n\n  handleLanguageChange(newLanguage) {\n    console.log(`Language changed to: ${newLanguage}`)\n    document.title = languageManager.t('app.title')\n    this.updateUITexts()\n  }\n\n  updateUITexts() {\n    // Update all elements with data-i18n attribute\n    const elementsWithI18n = document.querySelectorAll('[data-i18n]')\n\n    elementsWithI18n.forEach(element => {\n      const translationKey = element.getAttribute('data-i18n')\n\n      // Handle specific elements that need special treatment\n      if (element.tagName === 'INPUT' && element.type === 'text') {\n        // For input placeholders\n        const placeholderKey = element.getAttribute('data-i18n-attr')\n        if (placeholderKey && placeholderKey.includes('placeholder')) {\n          element.placeholder = languageManager.t(translationKey)\n        }\n      } else if (element.tagName === 'TEXTAREA') {\n        // For textarea placeholders\n        const placeholderKey = element.getAttribute('data-i18n-attr')\n        if (placeholderKey && placeholderKey.includes('placeholder')) {\n          element.placeholder = languageManager.t(translationKey)\n        }\n      } else {\n        // For regular text content\n        const translatedText = languageManager.t(translationKey)\n        if (translatedText) {\n          element.textContent = translatedText\n        }\n      }\n    })\n\n    // Update elements with data-i18n-attr (attributes)\n    const elementsWithI18nAttr = document.querySelectorAll('[data-i18n-attr]')\n\n    elementsWithI18nAttr.forEach(element => {\n      const attributes = element.getAttribute('data-i18n-attr').split(',')\n      const translationKey = element.getAttribute('data-i18n')\n\n      if (translationKey) {\n        const translatedText = languageManager.t(translationKey)\n\n        attributes.forEach(attr => {\n          const trimmedAttr = attr.trim()\n          if (trimmedAttr && translatedText) {\n            element.setAttribute(trimmedAttr, translatedText)\n          }\n        })\n      }\n    })\n\n    // Force update of placeholders and special elements\n    const markdownInput = document.getElementById('markdown-input')\n    if (markdownInput) {\n      markdownInput.placeholder = languageManager.t('editor.placeholder')\n    }\n\n    // Update language labels to show native names correctly\n    this.updateLanguageLabels()\n  }\n\n  updateLanguageLabels() {\n    const ptLabel = document.querySelector('input[value=\"pt\"]').closest('.atom-language-option').querySelector('.atom-language-option__label')\n    const enLabel = document.querySelector('input[value=\"en\"]').closest('.atom-language-option').querySelector('.atom-language-option__label')\n    const esLabel = document.querySelector('input[value=\"es\"]').closest('.atom-language-option').querySelector('.atom-language-option__label')\n\n    if (ptLabel) ptLabel.textContent = 'Português'\n    if (enLabel) enLabel.textContent = 'English'\n    if (esLabel) esLabel.textContent = 'Español'\n  }\n\n  handleThemeChange(newTheme) {\n    console.log(`Theme changed to: ${newTheme}`)\n  }\n\n  handleBeforeUnload(event) {\n    if (this.editorPanel && this.editorPanel.textEditor && this.editorPanel.textEditor.isDirtyContent()) {\n      event.preventDefault()\n      event.returnValue = ''\n      return ''\n    }\n  }\n\n  animateIn() {\n    if (this.header) {\n      this.header.animateIn()\n    }\n\n    setTimeout(() => {\n      if (this.editorPanel) {\n        this.editorPanel.animateIn()\n      }\n    }, 200)\n  }\n\n  showError(message) {\n    console.error('Application Error:', message)\n\n    // Show error in UI\n    const errorDiv = document.createElement('div')\n    errorDiv.className = 'app-error'\n    errorDiv.innerHTML = `\n      <h2>Error</h2>\n      <p>${message}</p>\n      <button onclick=\"location.reload()\">Reload</button>\n    `\n\n    document.body.appendChild(errorDiv)\n  }\n\n  // Public API\n  getMarkdown() {\n    return this.currentMarkdown\n  }\n\n  setMarkdown(markdown) {\n    if (this.editorPanel) {\n      this.editorPanel.setValue(markdown)\n    }\n  }\n\n  exportData() {\n    return {\n      markdown: this.currentMarkdown,\n      mindMap: this.currentMindMapData,\n      language: languageManager.getCurrentLanguage(),\n      theme: themeManager.getCurrentTheme(),\n      timestamp: new Date().toISOString()\n    }\n  }\n\n  destroy() {\n    // Clean up event listeners\n    window.removeEventListener('resize', this.handleResize)\n    document.removeEventListener('keydown', this.handleKeyboardShortcuts)\n    window.removeEventListener('beforeunload', this.handleBeforeUnload)\n\n    // Clear timeouts\n    if (this.generateTimeout) {\n      clearTimeout(this.generateTimeout)\n    }\n\n    // Destroy components\n    if (this.header) {\n      this.header.destroy()\n    }\n    if (this.editorPanel) {\n      this.editorPanel.destroy()\n    }\n\n    console.log('mark2 application destroyed')\n  }\n}\n\n// Initialize application when DOM is ready\nconst app = new Mark2App()\n\n// Auto-initialize\napp.init().catch(error => {\n  console.error('Failed to start mark2:', error)\n})\n\n// Export for global access (debugging)\nwindow.mark2App = app\n\n// Export the class\nexport default Mark2App\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n","__webpack_require__.o = function(obj, prop) { return Object.prototype.hasOwnProperty.call(obj, prop); }","// no baseURI\n\n// object to store loaded and loading chunks\n// undefined = chunk not loaded, null = chunk preloaded/prefetched\n// [resolve, reject, Promise] = chunk loading, 0 = chunk loaded\nvar installedChunks = {\n\t792: 0\n};\n\n// no chunk on demand loading\n\n// no prefetching\n\n// no preloaded\n\n// no HMR\n\n// no HMR manifest\n\n__webpack_require__.O.j = function(chunkId) { return installedChunks[chunkId] === 0; };\n\n// install a JSONP callback for chunk loading\nvar webpackJsonpCallback = function(parentChunkLoadingFunction, data) {\n\tvar chunkIds = data[0];\n\tvar moreModules = data[1];\n\tvar runtime = data[2];\n\t// add \"moreModules\" to the modules object,\n\t// then flag all \"chunkIds\" as loaded and fire callback\n\tvar moduleId, chunkId, i = 0;\n\tif(chunkIds.some(function(id) { return installedChunks[id] !== 0; })) {\n\t\tfor(moduleId in moreModules) {\n\t\t\tif(__webpack_require__.o(moreModules, moduleId)) {\n\t\t\t\t__webpack_require__.m[moduleId] = moreModules[moduleId];\n\t\t\t}\n\t\t}\n\t\tif(runtime) var result = runtime(__webpack_require__);\n\t}\n\tif(parentChunkLoadingFunction) parentChunkLoadingFunction(data);\n\tfor(;i < chunkIds.length; i++) {\n\t\tchunkId = chunkIds[i];\n\t\tif(__webpack_require__.o(installedChunks, chunkId) && installedChunks[chunkId]) {\n\t\t\tinstalledChunks[chunkId][0]();\n\t\t}\n\t\tinstalledChunks[chunkId] = 0;\n\t}\n\treturn __webpack_require__.O(result);\n}\n\nvar chunkLoadingGlobal = self[\"webpackChunkmark2\"] = self[\"webpackChunkmark2\"] || [];\nchunkLoadingGlobal.forEach(webpackJsonpCallback.bind(null, 0));\nchunkLoadingGlobal.push = webpackJsonpCallback.bind(null, chunkLoadingGlobal.push.bind(chunkLoadingGlobal));","// startup\n// Load entry module and return exports\n// This entry module depends on other loaded chunks and execution need to be delayed\nvar __webpack_exports__ = __webpack_require__.O(undefined, [869], function() { return __webpack_require__(180); })\n__webpack_exports__ = __webpack_require__.O(__webpack_exports__);\n"],"names":["deferred","meta","code","name","nativeName","direction","app","title","description","loading","error","success","header","subtitle","buttons","save","cancel","close","clear","example","export","import","help","settings","theme","language","zoomIn","zoomOut","fitScreen","reset","copy","paste","undo","redo","editor","placeholder","wordCount","lineCount","characterCount","saved","unsaved","mindMap","generating","empty","errorDetails","nodeSelected","nodeEdit","nodeDelete","connectionHover","zoomLevel","themes","light","dark","blue","green","orange","languages","portuguese","english","spanish","systemDefault","introduction","hierarchy","center","sections","subsections","items","instructions","headers","subheaders","subsubheaders","bullets","numbers","text","supportText","documentation","context","reference","note","tips","zoom","drag","select","formats","png","svg","pdf","json","options","includeBackground","highResolution","transparent","general","appearance","autoSave","wordWrap","lineNumbers","minimap","animations","sounds","notifications","accessibility","menu","navigation","main","sidebar","toolbar","dialog","button","textInput","checkbox","radioButton","link","image","video","audio","errors","network","fileNotFound","invalidFormat","saveError","loadError","parseError","renderError","permissionDenied","quotaExceeded","loaded","exported","imported","copied","file","new","open","saveAs","recent","untitled","modified","size","created","mobile","back","fullscreen","exitFullscreen","time","now","today","yesterday","lastWeek","lastMonth","minute","minutes","hour","hours","day","days","week","weeks","month","months","year","years","examples","atomicDesign","projectPlanning","studyNotes","constructor","this","pt","en","es","defaultLanguage","currentLanguage","fallbackLanguage","subscribers","init","loadStoredLanguage","applyLanguage","listenForSystemLanguageChanges","stored","localStorage","getItem","isLanguageAvailable","detectSystemLanguage","console","warn","navigator","langCode","split","toLowerCase","Object","keys","includes","setLanguage","previousLanguage","storeLanguage","notifySubscribers","document","documentElement","lang","dir","metaDescription","querySelector","content","setItem","getCurrentLanguage","getAvailableLanguages","map","getLanguageDisplayName","t","key","params","translate","value","getTranslation","fallbackValue","interpolate","current","k","length","replace","match","undefined","plural","count","pluralKey","getPluralKey","mergedParams","formatTime","formatDate","date","locale","Intl","DateTimeFormat","format","toString","formatNumber","number","NumberFormat","formatCurrency","amount","currency","style","subscribe","callback","push","index","indexOf","splice","newLanguage","forEach","window","addEventListener","systemLanguage","resetToSystemLanguage","removeItem","addLanguage","translations","updateLanguage","removeLanguage","exportLanguageSettings","availableLanguages","importLanguageSettings","destroy","currentTheme","loadStoredTheme","applyTheme","listenForSystemThemeChanges","getSystemTheme","matchMedia","matches","setTheme","themeName","previousTheme","storeTheme","body","classList","remove","add","updateMetaThemeColor","themeColors","metaThemeColor","createElement","head","appendChild","getCurrentTheme","getAvailableThemes","getThemeDisplayName","getThemeDescription","toggleTheme","nextIndex","cycleTheme","newTheme","mediaQuery","handleSystemThemeChange","e","systemTheme","addListener","resetToSystemTheme","exportThemeSettings","availableThemes","importThemeSettings","getCSSCustomProperty","propertyName","getComputedStyle","getPropertyValue","trim","setCSSCustomProperty","setProperty","buildNodeStructure","data","nodes","nodeId","rootNode","id","level","children","section","sectionNode","parent","item","itemNode","subsection","subsectionNode","positionLevelNodes","levelNodes","levelSpacing","nodeSpacing","radius","angleStep","Math","PI","node","angle","x","cos","y","sin","generateConnections","connections","parentNode","find","n","from","to","fromX","fromY","toX","toY","generateLayout","parsedData","containerWidth","containerHeight","calculateNodePositions","config","width","height","centerX","centerY","positionedNodes","nodesByLevel","levels","Number","sort","a","b","i","bounds","calculateBounds","minX","minY","maxX","maxY","xs","ys","min","max","Map","loadExamples","atomicDesignContent","getInlineExample","set","category","loadExampleFile","filename","response","fetch","ok","Error","status","getExample","get","getAllExamples","Array","values","getExamplesByCategory","filter","loadExampleContent","addExample","exampleData","removeExample","delete","hasExample","has","getExampleMetadata","container","panX","panY","isDragging","lastMousePos","nodeWidth","nodeHeight","itemSpacing","radial","bullet","vertical","horizontal","minAngle","layout","bulletThreshold","collisionMargin","colors","primary","secondary","accent","textLight","background","stroke","render","log","innerHTML","createSVG","processData","renderNodes","renderConnections","setupInteractivity","fitToView","createElementNS","setAttribute","border","borderRadius","defs","gradient","stop1","stop2","feDropShadow","mainGroup","type","sectionX","sectionY","parentId","allItems","subIndex","subsectionIndex","bulletItems","subsectionItems","layoutSubsectionsAsIntermediateLevel","layoutBulletsVertically","layoutItemsRadially","sectionAngle","sectionIndex","verticalSpacing","horizontalOffset","side","startY","itemIndex","itemX","itemY","itemRadius","totalAngleSpan","minAngleStep","idealAngleStep","itemAngleStep","baseAngle","itemAngle","subItemRadius","subItemAngleStep","subBaseAngle","subItem","subItemIndex","subItemAngle","subItemX","subItemY","subItemNode","processItemRadially","totalItems","nodeGroup","rect","textColor","fontWeight","fontSize","maxChars","words","lines","currentLine","word","line","tspan","textContent","cursor","highlightNode","connection","fromNode","toNode","insertBefore","firstChild","preventDefault","delta","deltaY","updateTransform","target","clientX","clientY","deltaX","querySelectorAll","opacity","selectedNode","transform","setTimeout","Infinity","halfWidth","halfHeight","marginX","marginY","containerRect","getBoundingClientRect","scaleX","scaleY","resetView","intermediateRadius","subsectionAngleStep","startAngle","subsectionAngle","subsectionX","subsectionY","bulletRadius","bulletAngleStep","bulletStartAngle","bulletText","bulletIndex","bulletAngle","bulletX","bulletY","bulletNode","supportedFormats","exportAsPNG","svgElement","scale","backgroundColor","canvas","ctx","getContext","fillStyle","fillRect","svgData","getSVGData","img","Image","Promise","resolve","reject","onload","drawImage","toBlob","blob","downloadBlob","onerror","src","btoa","exportAsSVG","Blob","svgClone","cloneNode","inlineStyles","XMLSerializer","serializeToString","element","computedStyle","prop","url","URL","createObjectURL","href","download","display","click","removeChild","revokeObjectURL","showExportModal","insertAdjacentHTML","modal","getElementById","setupExportModalListeners","closeButton","cancelButton","confirmButton","backdrop","closeModal","async","selectedFormat","timestamp","Date","toISOString","disabled","alert","message","escapeHandler","removeEventListener","onClick","variant","className","getClassName","position","zIndex","pointerEvents","event","handleKeyDown","bind","Boolean","join","setText","newText","setDisabled","setVariant","onLanguageChange","compact","showFlags","selectElement","languageManager","unsubscribe","handleLanguageChange","label","populateOptions","handleSelectionChange","option","formatLanguageName","selected","toUpperCase","flag","getLanguageFlag","selectedLanguage","setCompact","setShowFlags","focus","actions","showLanguageSelector","orientation","languageSelector","updateButtonTexts","createButtons","createLanguageSelector","action","Button","getButtonText","buttonElement","ariaLabel","icon","separator","addSeparator","LanguageSelector","selectorElement","addAction","removeAction","findIndex","updateAction","updates","assign","enableAction","disableAction","showAction","hideAction","isCompact","setOrientation","firstButton","setupKeyboardNavigation","currentIndex","btn","activeElement","newIndex","showToolbar","onThemeToggle","onExport","onExample","onHelp","titleElement","subtitleElement","updateLabels","createTitleSection","createToolbar","titleSection","handleThemeToggle","handleExample","handleExport","handleHelp","Toolbar","toolbarElement","themeManager","setTitle","setSubtitle","hideToolbar","setLoading","setMobileMode","isMobile","animateIn","required","multiline","rows","onChange","onFocus","onBlur","setupElement","attachEventListeners","autoResize","scrollHeight","getValue","setValue","setPlaceholder","blur","setSelectionRange","start","end","insertTextAtCursor","selectionStart","selectionEnd","newValue","slice","newCursorPos","showStats","enableShortcuts","statsElement","statusElement","isDirty","lastSavedValue","autoSaveTimeout","stats","characters","createTextInput","createStatsBar","setupAutoSave","setupKeyboardShortcuts","updateStats","TextInput","handleChange","handleFocus","handleBlur","inputElement","statsBar","updateStatsDisplay","updateStatusDisplay","triggerAutoSave","parts","clearTimeout","showSavedIndicator","showError","ctrlKey","metaKey","insertMarkdown","cursorPos","lineStart","lastIndexOf","lineText","substring","indentLine","shiftKey","before","after","selectedText","lineEnd","lineEndPos","newLineText","insertText","getStats","isDirtyContent","headerElement","textEditor","isVisible","isMinimized","createHeader","createContent","loadExample","handleClear","handleLoadExample","contentElement","TextEditor","editorElement","show","hide","minimize","maximize","toggleMinimize","exportContent","importContent","isInitialized","innerWidth","currentView","editorPanel","mindMapContainer","mindMapRenderer","mobileNav","currentMarkdown","currentMindMapData","isGenerating","appElement","mainElement","handleResize","handleMarkdownChange","readyState","initializeManagers","initializeComponents","setupEventListeners","setupResponsive","Header","EditorPanel","setupMobileNavigation","handleKeyboardShortcuts","handleThemeChange","handleBeforeUnload","updateResponsiveState","screen","editorTab","mindmapTab","setMobileView","connectToExistingHTML","updateUITexts","updateViewState","connectHeaderButtons","connectEditorElements","connectMindMapContainer","connectMobileNavigation","languageButton","handleLanguageToggle","themeButton","exportButton","helpButton","connectLanguageModal","connectThemeModal","connectHelpModal","markdownInput","clearButton","exampleButton","MindMapRenderer","connectMindMapControls","zoomInBtn","zoomOutBtn","fitScreenBtn","createMindMapContainer","mindMapSection","emptyState","generateTimeout","generateMindMap","markdown","setGenerating","headerRegex","exec","raw","parseHeaders","lists","charIndex","unorderedMatch","orderedMatch","parseList","root","currentSection","currentSubsection","startIndex","targetSection","targetSubsection","nextSectionIndex","s","nextSection","parseMarkdown","renderMindMapPlaceholder","showMindMapError","showEmptyState","loadingIndicator","errorState","showThemeModal","exportUtils","atomicDesignExample","showHelpModal","showLanguageModal","themeModal","hideThemeModal","input","checked","updateThemeModalSelection","firstRadio","themeInput","helpModal","hideHelpModal","targetTab","getAttribute","switchHelpTab","tabId","targetContent","languageModal","hideLanguageModal","updateLanguageModalSelection","languageInput","wasMobile","view","mindMapElement","translationKey","tagName","placeholderKey","translatedText","attributes","attr","trimmedAttr","updateLanguageLabels","ptLabel","closest","enLabel","esLabel","returnValue","errorDiv","getMarkdown","setMarkdown","exportData","catch","mark2App","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","exports","module","__webpack_modules__","m","O","result","chunkIds","fn","priority","notFulfilled","fulfilled","j","every","r","o","obj","prototype","hasOwnProperty","call","installedChunks","chunkId","webpackJsonpCallback","parentChunkLoadingFunction","moreModules","runtime","some","chunkLoadingGlobal","self","__webpack_exports__"],"sourceRoot":""}